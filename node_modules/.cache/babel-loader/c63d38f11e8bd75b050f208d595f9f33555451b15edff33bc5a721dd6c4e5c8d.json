{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { computed, ref } from \"vue\";\nimport router from \"@/router\";\nimport Comments from \"@/components/Comments.vue\";\nimport { useStore } from \"vuex\";\nimport { useRoute } from \"vue-router\";\nexport default {\n  name: \"Test\",\n  components: {\n    Comments\n  },\n  props: ['name'],\n  async created() {\n    await this.$store.dispatch(\"initialQuestionList\");\n  },\n  async setup() {\n    let questionNum = ref(0);\n    const store = useStore();\n    const route = useRoute();\n    const tests = computed(() => store.getters.getTests);\n    const routeName = computed(() => route.params.name);\n    const test = tests.value.filter(el => el.name === routeName.value)[0].questions;\n    let que = tests.value.filter(el => el.name === routeName.value)[0].question;\n    console.log(que);\n    let firstUnanswered = computed(() => test.findIndex(test => test.isAnswered === false));\n    let checkQuestionCompleted = computed(() => test.reduce((accumulator, currentValue) => accumulator + (currentValue.isAnswered ? 1 : 0), 0));\n    let nextQuestion = function (question, answer) {\n      if (checkQuestionCompleted.value + 1 !== test.length) {\n        this.test[question].isAnswered = true;\n        this.test[question].chosenAnswer = answer;\n        if (firstUnanswered.value > -1) {\n          questionNum.value = firstUnanswered.value;\n        } else {\n          questionNum.value++;\n        }\n      } else {\n        this.test[question].isAnswered = true;\n        setTimeout(() => {\n          router.push('/result');\n        }, 250);\n      }\n    };\n    return {\n      questionNum,\n      test,\n      nextQuestion,\n      checkQuestionCompleted,\n      que\n    };\n  }\n};","map":{"version":3,"names":["computed","ref","router","Comments","useStore","useRoute","name","components","props","created","$store","dispatch","setup","questionNum","store","route","tests","getters","getTests","routeName","params","test","value","filter","el","questions","que","question","console","log","firstUnanswered","findIndex","isAnswered","checkQuestionCompleted","reduce","accumulator","currentValue","nextQuestion","answer","length","chosenAnswer","setTimeout","push"],"sources":["E:\\Vue\\career_guidance\\src\\views\\Test.vue"],"sourcesContent":["<template>\r\n<Suspense>\r\n  <div class=\"test\">\r\n    <h1 class=\"test__title\">{{ name }}</h1>\r\n\r\n    <div class=\"test__questionCounter\">Вопрос {{ test[questionNum].id }}</div>\r\n\r\n    <div class=\"test__question\">\r\n      <div class=\"test__question-name\"> {{ test[questionNum].question }} </div>\r\n      <div class=\"test__question-answers\">\r\n        <div\r\n            class=\"test__question-answer\"\r\n            @click=\"nextQuestion(questionNum, test[questionNum].answer_1)\"\r\n        >\r\n          {{ test[questionNum].answer_1 }}\r\n        </div>\r\n        <div\r\n            class=\"test__question-answer\"\r\n            @click=\"nextQuestion(questionNum, test[questionNum].answer_2)\"\r\n        >\r\n          {{ test[questionNum].answer_2 }}\r\n        </div>\r\n      </div>\r\n    </div><!-- ./test__question -->\r\n    <div class=\"test__passed\">\r\n      Вы ответили на\r\n      {{ checkQuestionCompleted }}\r\n      из {{ test.length }} вопросов\r\n    </div>\r\n    <div class=\"test__questionNums\">\r\n      <div\r\n          :class=\"test[num-1].isAnswered ? 'active': ''\"\r\n          v-for=\"num in test.length\"\r\n          @click=\"questionNum = num-1\"\r\n          class=\"test__questionNum\">{{ num }}</div>\r\n    </div><!-- ./test__questionNums -->\r\n  </div><!-- ./test -->\r\n  <comments></comments>\r\n</Suspense>\r\n</template>\r\n\r\n<script>\r\nimport {computed, ref} from \"vue\";\r\nimport router from \"@/router\";\r\nimport Comments from \"@/components/Comments.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {useRoute} from \"vue-router\";\r\n\r\nexport default {\r\n  name: \"Test\",\r\n  components: { Comments },\r\n  props: ['name'],\r\n  async created() {\r\n    await this.$store.dispatch(\"initialQuestionList\");\r\n  },\r\n  async setup() {\r\n\r\n    let questionNum = ref(0);\r\n    const store = useStore();\r\n    const route = useRoute();\r\n    const tests = computed(() => store.getters.getTests);\r\n    const routeName = computed(() => route.params.name);\r\n    const test = tests.value.filter((el) => el.name === routeName.value)[0].questions;\r\n    let que = tests.value.filter((el) => el.name === routeName.value)[0].question;\r\n\r\n    console.log(que)\r\n\r\n    let firstUnanswered = computed(() => test.findIndex(test => test.isAnswered === false));\r\n    let checkQuestionCompleted = computed(() => test.reduce((accumulator, currentValue) => accumulator + (currentValue.isAnswered ? 1 : 0), 0))\r\n    let nextQuestion = function (question, answer) {\r\n      if(checkQuestionCompleted.value + 1 !== test.length) {\r\n        this.test[question].isAnswered = true;\r\n        this.test[question].chosenAnswer = answer;\r\n\r\n        if (firstUnanswered.value > -1) {\r\n          questionNum.value = firstUnanswered.value;\r\n        }\r\n        else {\r\n          questionNum.value++;\r\n        }\r\n      }\r\n      else {\r\n        this.test[question].isAnswered = true;\r\n        setTimeout(() => { router.push('/result'); }, 250);\r\n      }\r\n    }\r\n    return {\r\n      questionNum,\r\n      test,\r\n      nextQuestion,\r\n      checkQuestionCompleted,\r\n      que\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":";AA0CA,SAAQA,QAAQ,EAAEC,GAAG,QAAO,KAAK;AACjC,OAAOC,MAAK,MAAO,UAAU;AAC7B,OAAOC,QAAO,MAAO,2BAA2B;AAChD,SAAQC,QAAQ,QAAO,MAAM;AAC7B,SAAQC,QAAQ,QAAO,YAAY;AAEnC,eAAe;EACbC,IAAI,EAAE,MAAM;EACZC,UAAU,EAAE;IAAEJ;EAAS,CAAC;EACxBK,KAAK,EAAE,CAAC,MAAM,CAAC;EACf,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,qBAAqB,CAAC;EACnD,CAAC;EACD,MAAMC,KAAKA,CAAA,EAAG;IAEZ,IAAIC,WAAU,GAAIZ,GAAG,CAAC,CAAC,CAAC;IACxB,MAAMa,KAAI,GAAIV,QAAQ,EAAE;IACxB,MAAMW,KAAI,GAAIV,QAAQ,EAAE;IACxB,MAAMW,KAAI,GAAIhB,QAAQ,CAAC,MAAMc,KAAK,CAACG,OAAO,CAACC,QAAQ,CAAC;IACpD,MAAMC,SAAQ,GAAInB,QAAQ,CAAC,MAAMe,KAAK,CAACK,MAAM,CAACd,IAAI,CAAC;IACnD,MAAMe,IAAG,GAAIL,KAAK,CAACM,KAAK,CAACC,MAAM,CAAEC,EAAE,IAAKA,EAAE,CAAClB,IAAG,KAAMa,SAAS,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC,CAACG,SAAS;IACjF,IAAIC,GAAE,GAAIV,KAAK,CAACM,KAAK,CAACC,MAAM,CAAEC,EAAE,IAAKA,EAAE,CAAClB,IAAG,KAAMa,SAAS,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC,CAACK,QAAQ;IAE7EC,OAAO,CAACC,GAAG,CAACH,GAAG;IAEf,IAAII,eAAc,GAAI9B,QAAQ,CAAC,MAAMqB,IAAI,CAACU,SAAS,CAACV,IAAG,IAAKA,IAAI,CAACW,UAAS,KAAM,KAAK,CAAC,CAAC;IACvF,IAAIC,sBAAqB,GAAIjC,QAAQ,CAAC,MAAMqB,IAAI,CAACa,MAAM,CAAC,CAACC,WAAW,EAAEC,YAAY,KAAKD,WAAU,IAAKC,YAAY,CAACJ,UAAS,GAAI,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;IAC1I,IAAIK,YAAW,GAAI,SAAAA,CAAUV,QAAQ,EAAEW,MAAM,EAAE;MAC7C,IAAGL,sBAAsB,CAACX,KAAI,GAAI,MAAMD,IAAI,CAACkB,MAAM,EAAE;QACnD,IAAI,CAAClB,IAAI,CAACM,QAAQ,CAAC,CAACK,UAAS,GAAI,IAAI;QACrC,IAAI,CAACX,IAAI,CAACM,QAAQ,CAAC,CAACa,YAAW,GAAIF,MAAM;QAEzC,IAAIR,eAAe,CAACR,KAAI,GAAI,CAAC,CAAC,EAAE;UAC9BT,WAAW,CAACS,KAAI,GAAIQ,eAAe,CAACR,KAAK;QAC3C,OACK;UACHT,WAAW,CAACS,KAAK,EAAE;QACrB;MACF,OACK;QACH,IAAI,CAACD,IAAI,CAACM,QAAQ,CAAC,CAACK,UAAS,GAAI,IAAI;QACrCS,UAAU,CAAC,MAAM;UAAEvC,MAAM,CAACwC,IAAI,CAAC,SAAS,CAAC;QAAE,CAAC,EAAE,GAAG,CAAC;MACpD;IACF;IACA,OAAO;MACL7B,WAAW;MACXQ,IAAI;MACJgB,YAAY;MACZJ,sBAAsB;MACtBP;IACF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}