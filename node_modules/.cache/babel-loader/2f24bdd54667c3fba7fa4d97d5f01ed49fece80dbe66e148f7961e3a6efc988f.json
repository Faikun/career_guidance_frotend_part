{"ast":null,"code":"import { onMounted, ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport store from \"@/store\";\nexport default {\n  name: \"Account\",\n  setup() {\n    onMounted(() => {\n      name.value = users.filter(el => el.userId === parseInt(userId))[0].name;\n      mail.value = users.filter(el => el.userId === parseInt(userId))[0].mail;\n      password.value = users.filter(el => el.userId === parseInt(userId))[0].password;\n    });\n    let store = useStore();\n    let name = ref('');\n    let mail = ref('');\n    let password = ref('');\n    let users = store.getters.getUsers;\n    let userId = store.getters.getUserId;\n    let disabled = ref(true);\n    let isSmthChanged = ref(false);\n    watch(name, (count, prevCount) => isSmthChanged.value = true);\n    watch(mail, (count, prevCount) => isSmthChanged.value = true);\n    watch(password, (count, prevCount) => isSmthChanged.value = true);\n    let saveChanges = function () {\n      console.log(isSmthChanged);\n      if (isSmthChanged) {\n        const index = users.findIndex(object => {\n          return object.mail === users.filter(el => el.userId === parseInt(userId))[0].mail;\n        });\n        store.commit('setUsers', {\n          index: index,\n          name: name.value,\n          mail: mail.value,\n          password: password.value\n        });\n        disabled.value = true;\n        store.commit('setNotificationInfo', {\n          titleValue: 'Успех',\n          text: 'Данные успешно изменены',\n          mode: 'success'\n        });\n        // TODO: Так же сделать валидацию и закрывать окошко account при клике на ссылку\n      } else {\n        store.commit('setNotificationInfo', {\n          titleValue: 'Упс',\n          text: 'Похоже вы ничего не изменили',\n          mode: 'danger'\n        });\n      }\n    };\n    return {\n      name,\n      mail,\n      password,\n      saveChanges,\n      disabled\n    };\n  }\n};","map":{"version":3,"names":["onMounted","ref","watch","useStore","store","name","setup","value","users","filter","el","userId","parseInt","mail","password","getters","getUsers","getUserId","disabled","isSmthChanged","count","prevCount","saveChanges","console","log","index","findIndex","object","commit","titleValue","text","mode"],"sources":["E:\\Vue\\career_guidance\\src\\views\\Account.vue"],"sourcesContent":["<template>\r\n<div class=\"account\">\r\n  <h1 class=\"account__title\">Профиль</h1>\r\n  <div class=\"account__wrapper\">\r\n    <div class=\"account__item\">\r\n      <span class=\"account__item-text\">Имя</span>\r\n      <span class=\"account__item-input\">\r\n        <input :disabled=\"disabled\" type=\"text\" v-model.trim=\"name\">\r\n      </span>\r\n    </div><!-- ./account__item -->\r\n    <div class=\"account__item\">\r\n      <span class=\"account__item-text\">Почта</span>\r\n      <span class=\"account__item-input\">\r\n        <input :disabled=\"disabled\" type=\"text\" v-model.trim=\"mail\">\r\n      </span>\r\n    </div><!-- ./account__item -->\r\n    <div class=\"account__item\">\r\n      <span class=\"account__item-text\">Пароль</span>\r\n      <span class=\"account__item-input\">\r\n        <input :disabled=\"disabled\" type=\"password\" v-model.trim=\"password\">\r\n      </span>\r\n    </div><!-- ./account__item -->\r\n  </div><!--./account__wrapper -->\r\n  <button v-if=\"disabled\" type=\"button\" class=\"account__button btn white\" @click=\"disabled = false\">Изменить данные</button>\r\n  <button v-else type=\"button\" class=\"account__button btn green\" @click=\"saveChanges\">Сохранить изменения</button>\r\n  <div class=\"account__back\">\r\n    <a href=\"#\" @click=\"$router.go(-1)\">Назад</a>\r\n  </div>\r\n</div><!-- ./account -->\r\n</template>\r\n\r\n<script>\r\nimport {onMounted, ref, watch} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport store from \"@/store\";\r\n\r\nexport default {\r\n  name: \"Account\",\r\n  setup() {\r\n    onMounted(() => {\r\n      name.value = users.filter((el) => el.userId === parseInt(userId))[0].name\r\n      mail.value = users.filter((el) => el.userId === parseInt(userId))[0].mail\r\n      password.value = users.filter((el) => el.userId === parseInt(userId))[0].password\r\n    })\r\n\r\n    let store = useStore()\r\n    let name = ref('');\r\n    let mail = ref('');\r\n    let password = ref('');\r\n    let users = store.getters.getUsers;\r\n    let userId = store.getters.getUserId;\r\n    let disabled = ref(true);\r\n    let isSmthChanged = ref(false)\r\n\r\n    watch(name, (count, prevCount) => isSmthChanged.value = true )\r\n    watch(mail, (count, prevCount) => isSmthChanged.value = true )\r\n    watch(password, (count, prevCount) => isSmthChanged.value = true )\r\n\r\n    let saveChanges = function () {\r\n      console.log(isSmthChanged)\r\n      if(isSmthChanged) {\r\n        const index = users.findIndex(object => {\r\n          return object.mail === users.filter((el) => el.userId === parseInt(userId))[0].mail;\r\n        });\r\n        store.commit('setUsers', {index: index,name: name.value, mail: mail.value, password: password.value});\r\n        disabled.value = true;\r\n        store.commit('setNotificationInfo', { titleValue: 'Успех', text: 'Данные успешно изменены', mode: 'success'} )\r\n        // TODO: Так же сделать валидацию и закрывать окошко account при клике на ссылку\r\n      }\r\n      else {\r\n        store.commit('setNotificationInfo', { titleValue: 'Упс', text: 'Похоже вы ничего не изменили', mode: 'danger'} )\r\n      }\r\n    }\r\n\r\n    return {\r\n      name, mail, password,\r\n      saveChanges,\r\n      disabled\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}