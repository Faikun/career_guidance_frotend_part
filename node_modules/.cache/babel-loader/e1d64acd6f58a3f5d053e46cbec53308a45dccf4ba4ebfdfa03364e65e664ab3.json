{"ast":null,"code":"import { onMounted, ref } from \"vue\";\nimport { useStore } from \"vuex\";\nimport store from \"@/store\";\nexport default {\n  name: \"Account\",\n  setup() {\n    onMounted(() => {\n      name.value = users.filter(el => el.userId === parseInt(userId))[0].name;\n      mail.value = users.filter(el => el.userId === parseInt(userId))[0].mail;\n      password.value = users.filter(el => el.userId === parseInt(userId))[0].password;\n    });\n    let store = useStore();\n    let name = ref('');\n    let mail = ref('');\n    let password = ref('');\n    let users = store.getters.getUsers;\n    let userId = store.getters.getUserId;\n    let disabled = ref(true);\n    let saveChanges = function () {\n      const index = users.findIndex(object => {\n        return object.mail === users.filter(el => el.userId === parseInt(userId))[0].mail;\n      });\n      store.commit('setUsers', {\n        index: index,\n        name: name.value,\n        mail: mail.value,\n        password: password.value\n      });\n      disabled.value = true;\n      store.commit('setNotificationInfo', {\n        titleValue: 'Успех',\n        text: 'Данные успешно изменены',\n        mode: 'success'\n      });\n      // TODO: За место алерта, при успешной авторизации, вывести notification, которая находится в компонентах\n      // TODO: Так же сделать валидацию и закрывать окошко account при клике на ссылку\n    };\n\n    return {\n      name,\n      mail,\n      password,\n      saveChanges,\n      disabled\n    };\n  }\n};","map":{"version":3,"names":["onMounted","ref","useStore","store","name","setup","value","users","filter","el","userId","parseInt","mail","password","getters","getUsers","getUserId","disabled","saveChanges","index","findIndex","object","commit","titleValue","text","mode"],"sources":["E:\\Vue\\career_guidance\\src\\views\\Account.vue"],"sourcesContent":["<template>\r\n<div class=\"account\">\r\n  <h1 class=\"account__title\">Профиль</h1>\r\n  <div class=\"account__wrapper\">\r\n    <div class=\"account__item\">\r\n      <span class=\"account__item-text\">Имя</span>\r\n      <span class=\"account__item-input\">\r\n        <input :disabled=\"disabled\" type=\"text\" v-model.trim=\"name\">\r\n      </span>\r\n    </div><!-- ./account__item -->\r\n    <div class=\"account__item\">\r\n      <span class=\"account__item-text\">Почта</span>\r\n      <span class=\"account__item-input\">\r\n        <input :disabled=\"disabled\" type=\"text\" v-model.trim=\"mail\">\r\n      </span>\r\n    </div><!-- ./account__item -->\r\n    <div class=\"account__item\">\r\n      <span class=\"account__item-text\">Пароль</span>\r\n      <span class=\"account__item-input\">\r\n        <input :disabled=\"disabled\" type=\"password\" v-model.trim=\"password\">\r\n      </span>\r\n    </div><!-- ./account__item -->\r\n  </div><!--./account__wrapper -->\r\n  <button v-if=\"disabled\" type=\"button\" class=\"account__button btn white\" @click=\"disabled = false\">Изменить данные</button>\r\n  <button v-else type=\"button\" class=\"account__button btn green\" @click=\"saveChanges\">Сохранить изменения</button>\r\n  <div class=\"account__back\">\r\n    <a href=\"#\" @click=\"$router.go(-1)\">Назад</a>\r\n  </div>\r\n</div><!-- ./account -->\r\n</template>\r\n\r\n<script>\r\nimport {onMounted, ref} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport store from \"@/store\";\r\n\r\nexport default {\r\n  name: \"Account\",\r\n  setup() {\r\n    onMounted(() => {\r\n      name.value = users.filter((el) => el.userId === parseInt(userId))[0].name\r\n      mail.value = users.filter((el) => el.userId === parseInt(userId))[0].mail\r\n      password.value = users.filter((el) => el.userId === parseInt(userId))[0].password\r\n    })\r\n\r\n    let store = useStore()\r\n    let name = ref('');\r\n    let mail = ref('');\r\n    let password = ref('');\r\n    let users = store.getters.getUsers;\r\n    let userId = store.getters.getUserId;\r\n    let disabled = ref(true);\r\n\r\n    let saveChanges = function () {\r\n      const index = users.findIndex(object => {\r\n        return object.mail === users.filter((el) => el.userId === parseInt(userId))[0].mail;\r\n      });\r\n      store.commit('setUsers', {index: index,name: name.value, mail: mail.value, password: password.value});\r\n      disabled.value = true;\r\n      store.commit('setNotificationInfo', { titleValue: 'Успех', text: 'Данные успешно изменены', mode: 'success'} )\r\n      // TODO: За место алерта, при успешной авторизации, вывести notification, которая находится в компонентах\r\n      // TODO: Так же сделать валидацию и закрывать окошко account при клике на ссылку\r\n    }\r\n\r\n    return {\r\n      name, mail, password,\r\n      saveChanges,\r\n      disabled\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"mappings":"AAgCA,SAAQA,SAAS,EAAEC,GAAG,QAAO,KAAK;AAClC,SAAQC,QAAQ,QAAO,MAAM;AAC7B,OAAOC,KAAI,MAAO,SAAS;AAE3B,eAAe;EACbC,IAAI,EAAE,SAAS;EACfC,KAAKA,CAAA,EAAG;IACNL,SAAS,CAAC,MAAM;MACdI,IAAI,CAACE,KAAI,GAAIC,KAAK,CAACC,MAAM,CAAEC,EAAE,IAAKA,EAAE,CAACC,MAAK,KAAMC,QAAQ,CAACD,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAACN,IAAG;MACxEQ,IAAI,CAACN,KAAI,GAAIC,KAAK,CAACC,MAAM,CAAEC,EAAE,IAAKA,EAAE,CAACC,MAAK,KAAMC,QAAQ,CAACD,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAACE,IAAG;MACxEC,QAAQ,CAACP,KAAI,GAAIC,KAAK,CAACC,MAAM,CAAEC,EAAE,IAAKA,EAAE,CAACC,MAAK,KAAMC,QAAQ,CAACD,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAACG,QAAO;IAClF,CAAC;IAED,IAAIV,KAAI,GAAID,QAAQ,EAAC;IACrB,IAAIE,IAAG,GAAIH,GAAG,CAAC,EAAE,CAAC;IAClB,IAAIW,IAAG,GAAIX,GAAG,CAAC,EAAE,CAAC;IAClB,IAAIY,QAAO,GAAIZ,GAAG,CAAC,EAAE,CAAC;IACtB,IAAIM,KAAI,GAAIJ,KAAK,CAACW,OAAO,CAACC,QAAQ;IAClC,IAAIL,MAAK,GAAIP,KAAK,CAACW,OAAO,CAACE,SAAS;IACpC,IAAIC,QAAO,GAAIhB,GAAG,CAAC,IAAI,CAAC;IAExB,IAAIiB,WAAU,GAAI,SAAAA,CAAA,EAAY;MAC5B,MAAMC,KAAI,GAAIZ,KAAK,CAACa,SAAS,CAACC,MAAK,IAAK;QACtC,OAAOA,MAAM,CAACT,IAAG,KAAML,KAAK,CAACC,MAAM,CAAEC,EAAE,IAAKA,EAAE,CAACC,MAAK,KAAMC,QAAQ,CAACD,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAACE,IAAI;MACrF,CAAC,CAAC;MACFT,KAAK,CAACmB,MAAM,CAAC,UAAU,EAAE;QAACH,KAAK,EAAEA,KAAK;QAACf,IAAI,EAAEA,IAAI,CAACE,KAAK;QAAEM,IAAI,EAAEA,IAAI,CAACN,KAAK;QAAEO,QAAQ,EAAEA,QAAQ,CAACP;MAAK,CAAC,CAAC;MACrGW,QAAQ,CAACX,KAAI,GAAI,IAAI;MACrBH,KAAK,CAACmB,MAAM,CAAC,qBAAqB,EAAE;QAAEC,UAAU,EAAE,OAAO;QAAEC,IAAI,EAAE,yBAAyB;QAAEC,IAAI,EAAE;MAAS,EAAE;MAC7G;MACA;IACF;;IAEA,OAAO;MACLrB,IAAI;MAAEQ,IAAI;MAAEC,QAAQ;MACpBK,WAAW;MACXD;IACF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}