{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { computed, onMounted, reactive, ref } from \"vue\";\nimport router from \"@/router\";\nimport store from \"@/store\";\nimport { useStore } from \"vuex\";\nexport default {\n  name: \"Professions\",\n  setup() {\n    let searchProf = ref();\n    const store = useStore();\n    let getProf = computed(() => store.getters.getProfessionsArray);\n    let output = getProf.value;\n    const category = computed(() => store.getters.getProfCategory);\n    console.log(Object.values(category.value));\n    const categoryName = category.value.map(el => el.name);\n    const categoryImg = category.value.map(el => el.img);\n    console.log(categoryName, categoryImg);\n    let openProfessionList = function (prof) {\n      router.push({\n        name: 'Exact_Professions',\n        params: {\n          name: prof.category\n        }\n      });\n    };\n    onMounted(() => searchProfButton());\n    let searchProfButton = function (clicked) {\n      output = getProf.value;\n      console.log('mounted', output);\n      if (clicked) {\n        output = output.filter(el => el.category.toLowerCase().includes(searchProf.value.toLowerCase()));\n      }\n    };\n    return {\n      searchProf,\n      openProfessionList,\n      output,\n      searchProfButton,\n      categoryName,\n      categoryImg\n    };\n  }\n};","map":{"version":3,"names":["computed","onMounted","reactive","ref","router","store","useStore","name","setup","searchProf","getProf","getters","getProfessionsArray","output","value","category","getProfCategory","console","log","Object","values","categoryName","map","el","categoryImg","img","openProfessionList","prof","push","params","searchProfButton","clicked","filter","toLowerCase","includes"],"sources":["E:\\Vue\\career_guidance\\src\\views\\Professions.vue"],"sourcesContent":["<template>\r\n<div class=\"professions\">\r\n  <h1 class=\"professions__title\">Профессии</h1>\r\n\r\n  <div class=\"search\">\r\n    <input\r\n        class=\"search__input black\"\r\n        type=\"text\"\r\n        v-model.trim.lazy=\"searchProf\"\r\n        placeholder=\"Введите профессию\"\r\n        @keyup.enter = searchProfButton(true)>\r\n    <img class=\"search__icon\" src=\"../images/png/Search.png\" alt=\"icon\" @click=\"searchProfButton()\">\r\n  </div><!-- ./search -->\r\n\r\n  <div class=\"professions__wrapper\">\r\n    <div class=\"test__block\" v-for=\"prof in categoryName\" :key=\"prof.name\" @click=\"openProfessionList(prof)\">\r\n      <img class=\"test__block-img\" :src=\"prof.categoryImage\" alt=\"image\">\r\n      <span class=\"tests__name\">{{ prof.category }}</span>\r\n    </div>\r\n  </div><!-- ./professions__wrapper -->\r\n\r\n</div><!-- ./professions -->\r\n</template>\r\n\r\n<script>\r\nimport {computed, onMounted, reactive, ref} from \"vue\";\r\nimport router from \"@/router\";\r\nimport store from \"@/store\";\r\nimport {useStore} from \"vuex\";\r\n\r\nexport default {\r\n  name: \"Professions\",\r\n  setup() {\r\n    let searchProf = ref();\r\n    const store = useStore();\r\n    let getProf = computed(() => store.getters.getProfessionsArray);\r\n    let output = getProf.value;\r\n\r\n    const category = computed(() => store.getters.getProfCategory);\r\n    console.log(Object.values(category.value))\r\n\r\n    const categoryName = category.value.map((el) => el.name)\r\n    const categoryImg = category.value.map((el) => el.img)\r\n    console.log(categoryName, categoryImg)\r\n\r\n    let openProfessionList = function (prof) {\r\n      router.push({name: 'Exact_Professions', params: {name: prof.category}});\r\n    }\r\n\r\n    onMounted(() => searchProfButton());\r\n\r\n    let searchProfButton = function (clicked) {\r\n      output = getProf.value;\r\n      console.log('mounted', output)\r\n\r\n      if(clicked) {\r\n        output = output.filter((el) => el.category.toLowerCase().includes(searchProf.value.toLowerCase()));\r\n      }\r\n    };\r\n\r\n\r\n    return {\r\n      searchProf,\r\n      openProfessionList,\r\n      output,\r\n      searchProfButton,\r\n      categoryName, categoryImg\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"mappings":";AAyBA,SAAQA,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,GAAG,QAAO,KAAK;AACtD,OAAOC,MAAK,MAAO,UAAU;AAC7B,OAAOC,KAAI,MAAO,SAAS;AAC3B,SAAQC,QAAQ,QAAO,MAAM;AAE7B,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,KAAKA,CAAA,EAAG;IACN,IAAIC,UAAS,GAAIN,GAAG,EAAE;IACtB,MAAME,KAAI,GAAIC,QAAQ,EAAE;IACxB,IAAII,OAAM,GAAIV,QAAQ,CAAC,MAAMK,KAAK,CAACM,OAAO,CAACC,mBAAmB,CAAC;IAC/D,IAAIC,MAAK,GAAIH,OAAO,CAACI,KAAK;IAE1B,MAAMC,QAAO,GAAIf,QAAQ,CAAC,MAAMK,KAAK,CAACM,OAAO,CAACK,eAAe,CAAC;IAC9DC,OAAO,CAACC,GAAG,CAACC,MAAM,CAACC,MAAM,CAACL,QAAQ,CAACD,KAAK,CAAC;IAEzC,MAAMO,YAAW,GAAIN,QAAQ,CAACD,KAAK,CAACQ,GAAG,CAAEC,EAAE,IAAKA,EAAE,CAAChB,IAAI;IACvD,MAAMiB,WAAU,GAAIT,QAAQ,CAACD,KAAK,CAACQ,GAAG,CAAEC,EAAE,IAAKA,EAAE,CAACE,GAAG;IACrDR,OAAO,CAACC,GAAG,CAACG,YAAY,EAAEG,WAAW;IAErC,IAAIE,kBAAiB,GAAI,SAAAA,CAAUC,IAAI,EAAE;MACvCvB,MAAM,CAACwB,IAAI,CAAC;QAACrB,IAAI,EAAE,mBAAmB;QAAEsB,MAAM,EAAE;UAACtB,IAAI,EAAEoB,IAAI,CAACZ;QAAQ;MAAC,CAAC,CAAC;IACzE;IAEAd,SAAS,CAAC,MAAM6B,gBAAgB,EAAE,CAAC;IAEnC,IAAIA,gBAAe,GAAI,SAAAA,CAAUC,OAAO,EAAE;MACxClB,MAAK,GAAIH,OAAO,CAACI,KAAK;MACtBG,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEL,MAAM;MAE7B,IAAGkB,OAAO,EAAE;QACVlB,MAAK,GAAIA,MAAM,CAACmB,MAAM,CAAET,EAAE,IAAKA,EAAE,CAACR,QAAQ,CAACkB,WAAW,EAAE,CAACC,QAAQ,CAACzB,UAAU,CAACK,KAAK,CAACmB,WAAW,EAAE,CAAC,CAAC;MACpG;IACF,CAAC;IAGD,OAAO;MACLxB,UAAU;MACViB,kBAAkB;MAClBb,MAAM;MACNiB,gBAAgB;MAChBT,YAAY;MAAEG;IAChB;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}