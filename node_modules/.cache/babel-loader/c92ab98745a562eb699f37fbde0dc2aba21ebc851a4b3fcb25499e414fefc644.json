{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { computed, ref } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { useRoute } from \"vue-router\";\nimport router from \"@/router\";\nexport default {\n  name: \"TestTemplate\",\n  async setup() {\n    let questionNum = ref(0);\n    const store = useStore();\n    const route = useRoute();\n    await store.dispatch(\"initialQuestionList\");\n    const tests = computed(() => store.getters.getTests);\n    const users = computed(() => store.getters.getUsers);\n    const routeName = computed(() => route.params.name);\n    const test = tests.value.filter(el => el.name === routeName.value)[0].questions;\n    let chosenAns = new Array(test.length);\n    let firstUnanswered = computed(() => test.findIndex(test => test.isAnswered === false));\n    let checkQuestionCompleted = computed(() => test.reduce((accumulator, currentValue) => accumulator + (currentValue.isAnswered ? 1 : 0), 0));\n    const sendAnswers = async chosenAns => {\n      let response = await fetch('http://localhost:8081/answers/send', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(chosenAns)\n      });\n      const result = await response.json();\n      return JSON.stringify(result);\n    };\n    let nextQuestion = async function (question, answer, chosenAnswer) {\n      if (checkQuestionCompleted.value + 1 !== test.length) {\n        this.test[question].isAnswered = true;\n        chosenAns[question] = chosenAnswer;\n        if (firstUnanswered.value > -1) {\n          questionNum.value = firstUnanswered.value;\n        } else {\n          questionNum.value++;\n        }\n      } else {\n        chosenAns[question] = chosenAnswer;\n        const result = await sendAnswers(chosenAns);\n        if (store.getters.getAuth) {\n          users.value.filter(el => el.userId === store.getters.getUserId).history = result;\n          console.log(users.value);\n          console.log(users.value.filter(el => el.userId.toString() === store.getters.getUserId));\n        } else {\n          localStorage.setItem('test', result);\n        }\n        setTimeout(() => {\n          router.push('/result');\n        }, 250);\n      }\n    };\n    return {\n      questionNum,\n      test,\n      nextQuestion,\n      checkQuestionCompleted\n    };\n  }\n};","map":{"version":3,"names":["computed","ref","useStore","useRoute","router","name","setup","questionNum","store","route","dispatch","tests","getters","getTests","users","getUsers","routeName","params","test","value","filter","el","questions","chosenAns","Array","length","firstUnanswered","findIndex","isAnswered","checkQuestionCompleted","reduce","accumulator","currentValue","sendAnswers","response","fetch","method","headers","body","JSON","stringify","result","json","nextQuestion","question","answer","chosenAnswer","getAuth","userId","getUserId","history","console","log","toString","localStorage","setItem","setTimeout","push"],"sources":["E:\\Vue\\career_guidance\\src\\components\\TestTemplate.vue"],"sourcesContent":["<template>\r\n  <div class=\"test__questionCounter\">Вопрос {{ questionNum + 1 }}</div>\r\n\r\n  <div class=\"test__question\">\r\n    <div class=\"test__question-name\"> {{ test[questionNum].question }} </div>\r\n    <div class=\"test__question-answers\">\r\n      <div\r\n          class=\"test__question-answer\"\r\n          v-for=\"answer in test[questionNum].answer\"\r\n          @click=\"nextQuestion(questionNum, test[questionNum], answer)\"\r\n      >\r\n        {{ answer }}\r\n      </div>\r\n    </div>\r\n  </div><!-- ./test__question -->\r\n  <div class=\"test__passed\">\r\n    Вы ответили на\r\n    {{ checkQuestionCompleted }}\r\n    из {{ test.length }} вопросов\r\n  </div>\r\n  <div class=\"test__questionNums\">\r\n    <div\r\n        :class=\"test[num-1].isAnswered ? 'active': ''\"\r\n        v-for=\"num in test.length\"\r\n        @click=\"questionNum = num-1\"\r\n        class=\"test__questionNum\">{{ num }}</div>\r\n  </div><!-- ./test__questionNums -->\r\n</template>\r\n\r\n<script>\r\nimport {computed, ref} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {useRoute} from \"vue-router\";\r\nimport router from \"@/router\";\r\n\r\nexport default {\r\n  name: \"TestTemplate\",\r\n  async setup() {\r\n    let questionNum = ref(0);\r\n    const store = useStore();\r\n    const route = useRoute();\r\n\r\n    await store.dispatch(\"initialQuestionList\");\r\n\r\n    const tests = computed(() => store.getters.getTests);\r\n    const users = computed(() => store.getters.getUsers);\r\n    const routeName = computed(() => route.params.name);\r\n    const test = tests.value.filter((el) => el.name === routeName.value)[0].questions;\r\n    let chosenAns = new Array(test.length);\r\n\r\n    let firstUnanswered = computed(() => test.findIndex(test => test.isAnswered === false));\r\n    let checkQuestionCompleted = computed(() => test.reduce((accumulator, currentValue) => accumulator + (currentValue.isAnswered ? 1 : 0), 0));\r\n\r\n    const sendAnswers = async (chosenAns) => {\r\n      let response = await fetch('http://localhost:8081/answers/send', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(chosenAns)\r\n      })\r\n      const result = await response.json();\r\n      return JSON.stringify(result);\r\n    }\r\n\r\n    let nextQuestion = async function (question, answer, chosenAnswer) {\r\n      if (checkQuestionCompleted.value + 1 !== test.length) {\r\n        this.test[question].isAnswered = true\r\n        chosenAns[question] = chosenAnswer;\r\n\r\n        if (firstUnanswered.value > -1) {\r\n          questionNum.value = firstUnanswered.value;\r\n        } else {\r\n          questionNum.value++;\r\n        }\r\n      }\r\n      else {\r\n        chosenAns[question] = chosenAnswer;\r\n        const result = await sendAnswers(chosenAns);\r\n        if (store.getters.getAuth) {\r\n          users.value.filter((el) => el.userId === store.getters.getUserId).history = result;\r\n          console.log(users.value)\r\n          console.log(users.value.filter((el) => el.userId.toString() === store.getters.getUserId))\r\n        }\r\n        else {\r\n          localStorage.setItem('test', result);\r\n        }\r\n        setTimeout(() => {\r\n          router.push('/result');\r\n        }, 250);\r\n      }\r\n    }\r\n    return {\r\n      questionNum,\r\n      test,\r\n      nextQuestion,\r\n      checkQuestionCompleted\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}