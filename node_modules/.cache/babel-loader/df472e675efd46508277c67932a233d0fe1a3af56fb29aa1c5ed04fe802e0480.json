{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Comments from \"@/components/Comments.vue\";\nimport { useStore } from \"vuex\";\nimport { computed, watch } from \"vue\";\nexport default {\n  name: \"Result\",\n  components: {\n    Comments\n  },\n  setup() {\n    let store = useStore();\n    let auth = function () {\n      store.commit('toggleOpenedAuth');\n      document.body.style.overflow = \"hidden\";\n    };\n    let finalRes = [];\n    const isAuth = computed(() => store.getters.getAuth);\n    const users = computed(() => store.getters.getUsers);\n    console.log('users', users);\n    if (isAuth) {\n      const user = store.getters.getUsers.filter(el => el.userId === store.getters.getUserId);\n      user[0].history.forEach(el => finalRes.push(el));\n    }\n    watch(isAuth, (newValue, oldValue) => {\n      if (newValue) {\n        const result = JSON.parse(localStorage.getItem('test'));\n        users.value.filter(el => el.userId.toString() === store.getters.getUserId)[0].history = Object.entries(result);\n        Object.entries(result).forEach(el => finalRes.push(el));\n      }\n    });\n    return {\n      store,\n      auth,\n      finalRes\n    };\n  }\n};","map":{"version":3,"names":["Comments","useStore","computed","watch","name","components","setup","store","auth","commit","document","body","style","overflow","finalRes","isAuth","getters","getAuth","users","getUsers","console","log","user","filter","el","userId","getUserId","history","forEach","push","newValue","oldValue","result","JSON","parse","localStorage","getItem","value","toString","Object","entries"],"sources":["E:\\Vue\\career_guidance\\src\\views\\Result.vue"],"sourcesContent":["<template>\r\n<div class=\"result\">\r\n  <h1 class=\"result__title\">Результаты</h1>\r\n  <h3 class=\"test__completed\">Поздравляем! Вы успешно сдали тест</h3>\r\n  <h4 class=\"test__completed\">Итоги теста:</h4>\r\n  <ul v-if=\"store.getters.getAuth\" class=\"result__show\">\r\n    <li v-for=\"res in finalRes\" :key=\"res[0]\" class=\"result__show-item\">\r\n      <span>{{ res[0] }}</span>\r\n      <span>{{ res[1] }}</span>\r\n    </li>\r\n  </ul><!-- ./result__show -->\r\n  <div v-else class=\"result__auth\">\r\n    <div class=\"result__statement\">Чтобы увидеть результат, пожалуйста, пройдите регистрацию или войдите в свою учётную запись</div>\r\n    <div class=\"result__auth-links\">\r\n      <a href=\"#\" @click=\"auth\">Войти в аккаунт</a>\r\n      <a href=\"#\" @click=\"auth\">Зарегестрироваться</a>\r\n    </div>\r\n  </div><!-- ./result__auth -->\r\n  <comments></comments>\r\n</div><!-- ./result -->\r\n</template>\r\n\r\n<script>\r\nimport Comments from \"@/components/Comments.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {computed, watch} from \"vue\";\r\n\r\nexport default {\r\n  name: \"Result\",\r\n  components: {Comments},\r\n  setup() {\r\n    let store = useStore();\r\n    let auth = function () {\r\n      store.commit('toggleOpenedAuth');\r\n      document.body.style.overflow = \"hidden\";\r\n    }\r\n    let finalRes = [];\r\n\r\n    const isAuth = computed(() => store.getters.getAuth)\r\n    const users = computed(() => store.getters.getUsers)\r\n    console.log('users', users);\r\n\r\n    if(isAuth) {\r\n      const user = store.getters.getUsers.filter((el) => el.userId === store.getters.getUserId);\r\n      user[0].history.forEach((el) => finalRes.push(el))\r\n    }\r\n\r\n    watch(isAuth, (newValue, oldValue) => {\r\n      if(newValue) {\r\n        const result = JSON.parse(localStorage.getItem('test'));\r\n        users.value.filter((el) => el.userId.toString() === store.getters.getUserId)[0].history = Object.entries(result);\r\n        Object.entries(result).forEach((el) => finalRes.push(el))\r\n      }\r\n    })\r\n\r\n    return {\r\n      store,\r\n      auth,\r\n      finalRes\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"mappings":";AAuBA,OAAOA,QAAO,MAAO,2BAA2B;AAChD,SAAQC,QAAQ,QAAO,MAAM;AAC7B,SAAQC,QAAQ,EAAEC,KAAK,QAAO,KAAK;AAEnC,eAAe;EACbC,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE;IAACL;EAAQ,CAAC;EACtBM,KAAKA,CAAA,EAAG;IACN,IAAIC,KAAI,GAAIN,QAAQ,EAAE;IACtB,IAAIO,IAAG,GAAI,SAAAA,CAAA,EAAY;MACrBD,KAAK,CAACE,MAAM,CAAC,kBAAkB,CAAC;MAChCC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,QAAO,GAAI,QAAQ;IACzC;IACA,IAAIC,QAAO,GAAI,EAAE;IAEjB,MAAMC,MAAK,GAAIb,QAAQ,CAAC,MAAMK,KAAK,CAACS,OAAO,CAACC,OAAO;IACnD,MAAMC,KAAI,GAAIhB,QAAQ,CAAC,MAAMK,KAAK,CAACS,OAAO,CAACG,QAAQ;IACnDC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEH,KAAK,CAAC;IAE3B,IAAGH,MAAM,EAAE;MACT,MAAMO,IAAG,GAAIf,KAAK,CAACS,OAAO,CAACG,QAAQ,CAACI,MAAM,CAAEC,EAAE,IAAKA,EAAE,CAACC,MAAK,KAAMlB,KAAK,CAACS,OAAO,CAACU,SAAS,CAAC;MACzFJ,IAAI,CAAC,CAAC,CAAC,CAACK,OAAO,CAACC,OAAO,CAAEJ,EAAE,IAAKV,QAAQ,CAACe,IAAI,CAACL,EAAE,CAAC;IACnD;IAEArB,KAAK,CAACY,MAAM,EAAE,CAACe,QAAQ,EAAEC,QAAQ,KAAK;MACpC,IAAGD,QAAQ,EAAE;QACX,MAAME,MAAK,GAAIC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;QACvDlB,KAAK,CAACmB,KAAK,CAACd,MAAM,CAAEC,EAAE,IAAKA,EAAE,CAACC,MAAM,CAACa,QAAQ,EAAC,KAAM/B,KAAK,CAACS,OAAO,CAACU,SAAS,CAAC,CAAC,CAAC,CAAC,CAACC,OAAM,GAAIY,MAAM,CAACC,OAAO,CAACR,MAAM,CAAC;QAChHO,MAAM,CAACC,OAAO,CAACR,MAAM,CAAC,CAACJ,OAAO,CAAEJ,EAAE,IAAKV,QAAQ,CAACe,IAAI,CAACL,EAAE,CAAC;MAC1D;IACF,CAAC;IAED,OAAO;MACLjB,KAAK;MACLC,IAAI;MACJM;IACF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}