{"ast":null,"code":"import { createStore } from 'vuex';\nimport { ref } from \"vue\";\nimport Universities from \"@/store/modules/Universities\";\nimport Category from \"@/store/modules/category\";\nimport ProfessionsArray from \"@/store/modules/professionsArray\";\nimport users from \"@/store/modules/users\";\nexport default createStore({\n  state: {\n    isAuth: false,\n    isAdmin: false,\n    userId: null,\n    openedAuth: false,\n    notification: ref({\n      title: '',\n      text: '',\n      mode: '',\n      openedNotification: false\n    })\n  },\n  getters: {\n    getAuth(state) {\n      return state.isAuth;\n    },\n    getAdmin(state) {\n      return state.isAdmin;\n    },\n    getOpenedAuth(state) {\n      return state.openedAuth;\n    },\n    getUserId(state) {\n      return state.userId;\n    },\n    getNotificationInfo(state) {\n      return state.notification;\n    }\n  },\n  mutations: {\n    toggleOpenedAuth(state) {\n      state.openedAuth = !state.openedAuth;\n    },\n    setAuth(state) {\n      state.isAuth = !state.isAuth;\n    },\n    setAdmin(state) {\n      state.isAdmin = !state.isAdmin;\n    },\n    setUserId(state, value) {\n      state.userId = value;\n    },\n    setNotificationBool(state) {\n      state.notification.openedNotification = false;\n    },\n    setNotificationInfo(state, payload) {\n      state.notification.title = payload.titleValue;\n      state.notification.text = payload.text;\n      state.notification.mode = payload.mode;\n      state.notification.openedNotification = true;\n    }\n  },\n  actions: {},\n  modules: {\n    university: Universities,\n    category: Category,\n    professionsArray: ProfessionsArray,\n    users: users\n  }\n});","map":{"version":3,"names":["createStore","ref","Universities","Category","ProfessionsArray","users","state","isAuth","isAdmin","userId","openedAuth","notification","title","text","mode","openedNotification","getters","getAuth","getAdmin","getOpenedAuth","getUserId","getNotificationInfo","mutations","toggleOpenedAuth","setAuth","setAdmin","setUserId","value","setNotificationBool","setNotificationInfo","payload","titleValue","actions","modules","university","category","professionsArray"],"sources":["E:/Vue/career_guidance/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\nimport {ref} from \"vue\";\nimport Universities from \"@/store/modules/Universities\";\nimport Category from \"@/store/modules/category\";\nimport ProfessionsArray from \"@/store/modules/professionsArray\";\nimport users from \"@/store/modules/users\";\nexport default createStore({\n  state: {\n    isAuth: false,\n    isAdmin: false,\n    userId: null,\n    openedAuth: false,\n    notification: ref({\n      title: '',\n      text: '',\n      mode: '',\n      openedNotification: false\n    })\n  },\n  getters: {\n    getAuth(state) {\n      return state.isAuth\n    },\n    getAdmin(state) {\n      return state.isAdmin\n    },\n    getOpenedAuth(state) {\n      return state.openedAuth\n    },\n    getUserId(state) {\n      return state.userId\n    },\n    getNotificationInfo(state) {\n      return state.notification\n    }\n  },\n  mutations: {\n    toggleOpenedAuth(state) {\n      state.openedAuth = !state.openedAuth;\n    },\n    setAuth(state) {\n      state.isAuth = !state.isAuth\n    },\n    setAdmin(state) {\n      state.isAdmin = !state.isAdmin\n    },\n    setUserId(state, value) {\n      state.userId = value\n    },\n    setNotificationBool(state) {\n      state.notification.openedNotification = false;\n    },\n    setNotificationInfo(state, payload) {\n      state.notification.title = payload.titleValue;\n      state.notification.text = payload.text;\n      state.notification.mode = payload.mode;\n      state.notification.openedNotification = true;\n    }\n  },\n  actions: {\n  },\n  modules: {\n    university: Universities,\n    category: Category,\n    professionsArray: ProfessionsArray,\n    users: users\n  }\n})\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC,SAAQC,GAAG,QAAO,KAAK;AACvB,OAAOC,YAAY,MAAM,8BAA8B;AACvD,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,gBAAgB,MAAM,kCAAkC;AAC/D,OAAOC,KAAK,MAAM,uBAAuB;AACzC,eAAeL,WAAW,CAAC;EACzBM,KAAK,EAAE;IACLC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE,KAAK;IACdC,MAAM,EAAE,IAAI;IACZC,UAAU,EAAE,KAAK;IACjBC,YAAY,EAAEV,GAAG,CAAC;MAChBW,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE,EAAE;MACRC,IAAI,EAAE,EAAE;MACRC,kBAAkB,EAAE;IACtB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,OAAOA,CAACX,KAAK,EAAE;MACb,OAAOA,KAAK,CAACC,MAAM;IACrB,CAAC;IACDW,QAAQA,CAACZ,KAAK,EAAE;MACd,OAAOA,KAAK,CAACE,OAAO;IACtB,CAAC;IACDW,aAAaA,CAACb,KAAK,EAAE;MACnB,OAAOA,KAAK,CAACI,UAAU;IACzB,CAAC;IACDU,SAASA,CAACd,KAAK,EAAE;MACf,OAAOA,KAAK,CAACG,MAAM;IACrB,CAAC;IACDY,mBAAmBA,CAACf,KAAK,EAAE;MACzB,OAAOA,KAAK,CAACK,YAAY;IAC3B;EACF,CAAC;EACDW,SAAS,EAAE;IACTC,gBAAgBA,CAACjB,KAAK,EAAE;MACtBA,KAAK,CAACI,UAAU,GAAG,CAACJ,KAAK,CAACI,UAAU;IACtC,CAAC;IACDc,OAAOA,CAAClB,KAAK,EAAE;MACbA,KAAK,CAACC,MAAM,GAAG,CAACD,KAAK,CAACC,MAAM;IAC9B,CAAC;IACDkB,QAAQA,CAACnB,KAAK,EAAE;MACdA,KAAK,CAACE,OAAO,GAAG,CAACF,KAAK,CAACE,OAAO;IAChC,CAAC;IACDkB,SAASA,CAACpB,KAAK,EAAEqB,KAAK,EAAE;MACtBrB,KAAK,CAACG,MAAM,GAAGkB,KAAK;IACtB,CAAC;IACDC,mBAAmBA,CAACtB,KAAK,EAAE;MACzBA,KAAK,CAACK,YAAY,CAACI,kBAAkB,GAAG,KAAK;IAC/C,CAAC;IACDc,mBAAmBA,CAACvB,KAAK,EAAEwB,OAAO,EAAE;MAClCxB,KAAK,CAACK,YAAY,CAACC,KAAK,GAAGkB,OAAO,CAACC,UAAU;MAC7CzB,KAAK,CAACK,YAAY,CAACE,IAAI,GAAGiB,OAAO,CAACjB,IAAI;MACtCP,KAAK,CAACK,YAAY,CAACG,IAAI,GAAGgB,OAAO,CAAChB,IAAI;MACtCR,KAAK,CAACK,YAAY,CAACI,kBAAkB,GAAG,IAAI;IAC9C;EACF,CAAC;EACDiB,OAAO,EAAE,CACT,CAAC;EACDC,OAAO,EAAE;IACPC,UAAU,EAAEhC,YAAY;IACxBiC,QAAQ,EAAEhC,QAAQ;IAClBiC,gBAAgB,EAAEhC,gBAAgB;IAClCC,KAAK,EAAEA;EACT;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}