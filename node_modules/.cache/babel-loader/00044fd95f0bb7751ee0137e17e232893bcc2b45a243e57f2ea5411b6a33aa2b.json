{"ast":null,"code":"import { useStore } from \"vuex\";\nimport { useRoute } from \"vue-router\";\nexport default {\n  name: \"UniversityTemplate\",\n  props: ['uniName'],\n  async setup() {\n    const store = useStore();\n    const route = useRoute();\n    await store.dispatch('setAllUniversities');\n    let university = store.getters.getUniversity.filter(el => el.name === route.params.uniName);\n    console.log(university);\n    const benefits = university[0].benefits.split(',');\n    return {\n      university: university[0],\n      benefits\n    };\n  }\n};","map":{"version":3,"names":["useStore","useRoute","name","props","setup","store","route","dispatch","university","getters","getUniversity","filter","el","params","uniName","console","log","benefits","split"],"sources":["E:\\Vue\\career_guidance\\src\\components\\UniversityTemplate.vue"],"sourcesContent":["<template>\r\n  <div class=\"university__info\">\r\n    <h2 class=\"university__title\" id=\"general\">Общее</h2>\r\n    <ul class=\"university__info-text\">\r\n      <li class=\"university__info-item\">\r\n        <span>Название:</span>\r\n        <span>{{ university.name }}</span>\r\n      </li>\r\n      <li class=\"university__info-item\">\r\n        <span>Статус:</span>\r\n        <span>{{ university.status }}</span>\r\n      </li>\r\n      <li class=\"university__info-item\">\r\n        <span>Лого:</span>\r\n        <img :src=\"university.image\">\r\n      </li>\r\n      <li class=\"university__info-item\">\r\n        <span>Местоположение:</span>\r\n        <span>{{ university.location }}</span>\r\n      </li>\r\n      <li class=\"university__info-item\">\r\n        <span>Проходные баллы:</span>\r\n        <span>{{ university.passScores }}</span>\r\n      </li>\r\n      <li class=\"university__info-item\">\r\n        <span>Бюджетных мест:</span>\r\n        <span>{{ university.budget }}</span>\r\n      </li>\r\n      <li class=\"university__info-item\">\r\n        <span>Внебюджетных мест:</span>\r\n        <span>{{ university.offbudget }}</span>\r\n      </li>\r\n    </ul>\r\n    <h2 class=\"university__info-title\" id=\"subjects\">Предметы</h2>\r\n    <ul class=\"university__info-text list\">\r\n      <li v-for=\"subject in university.subjects\" :key=\"subject\">{{ subject }}</li>\r\n    </ul>\r\n    <h2 class=\"university__info-title\" id=\"description\">Описание</h2>\r\n    <div class=\"university__info-text\">{{ university.description }}</div>\r\n    <h2 class=\"university__info-title\" id=\"benefits\">Преимущества</h2>\r\n    <ul class=\"university__info-text list\">\r\n      <li v-for=\"benefit in benefits\">{{ benefit }}</li>\r\n    </ul>\r\n    <h2 class=\"university__info-title\" id=\"request\">Подать заявку на поступление в данный университет</h2>\r\n    <router-link :to=\"'/request/' + uniName\" type=\"button\" class=\"university__info-btn btn green\">Подать заявку</router-link>\r\n  </div><!-- ./university___info -->\r\n</template>\r\n\r\n<script>\r\nimport {useStore} from \"vuex\";\r\nimport {useRoute} from \"vue-router\";\r\n\r\nexport default {\r\n  name: \"UniversityTemplate\",\r\n  props: ['uniName'],\r\n  async setup() {\r\n    const store = useStore();\r\n    const route = useRoute();\r\n    await store.dispatch('setAllUniversities')\r\n\r\n    let university = store.getters.getUniversity.filter((el) => el.name === route.params.uniName);\r\n    console.log(university)\r\n    \r\n    const benefits = university[0].benefits.split(',');\r\n    return {\r\n      university: university[0],\r\n      benefits\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"mappings":"AAiDA,SAAQA,QAAQ,QAAO,MAAM;AAC7B,SAAQC,QAAQ,QAAO,YAAY;AAEnC,eAAe;EACbC,IAAI,EAAE,oBAAoB;EAC1BC,KAAK,EAAE,CAAC,SAAS,CAAC;EAClB,MAAMC,KAAKA,CAAA,EAAG;IACZ,MAAMC,KAAI,GAAIL,QAAQ,EAAE;IACxB,MAAMM,KAAI,GAAIL,QAAQ,EAAE;IACxB,MAAMI,KAAK,CAACE,QAAQ,CAAC,oBAAoB;IAEzC,IAAIC,UAAS,GAAIH,KAAK,CAACI,OAAO,CAACC,aAAa,CAACC,MAAM,CAAEC,EAAE,IAAKA,EAAE,CAACV,IAAG,KAAMI,KAAK,CAACO,MAAM,CAACC,OAAO,CAAC;IAC7FC,OAAO,CAACC,GAAG,CAACR,UAAU;IAEtB,MAAMS,QAAO,GAAIT,UAAU,CAAC,CAAC,CAAC,CAACS,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC;IAClD,OAAO;MACLV,UAAU,EAAEA,UAAU,CAAC,CAAC,CAAC;MACzBS;IACF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}