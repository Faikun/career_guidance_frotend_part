{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from \"vue\";\nimport store from \"@/store\";\nimport axios from \"axios\";\nexport default {\n  name: \"Login\",\n  async setup() {\n    let isLogin = ref(true);\n    await store.dispatch(\"setAllUsers\");\n    const passwordImage = ref(null);\n    const passwordRef = ref(null);\n    const passwordImage_2 = ref(null);\n    const passwordRef_2 = ref(null);\n    const mailRef = ref(null);\n    const selectLocationRef = ref(null);\n    const nameReg = ref(null);\n    const mailReg = ref(null);\n    let name = ref('');\n    let mail = ref('');\n    let password = ref('');\n    let repeatedPassword = ref('');\n    let selectLocation = ref('');\n    let closeAuthBlock = function () {\n      store.commit('toggleOpenedAuth');\n      document.body.style.overflow = \"auto\";\n    };\n    let passwordToggle = function (passRef, passImage) {\n      passRef.setAttribute('type', passRef.getAttribute('type') === 'password' ? 'text' : 'password');\n      passImage.setAttribute('src', passImage.getAttribute('src') === require('../images/png/eye_opened.png') ? require('../images/png/eye_closed.png') : require('../images/png/eye_opened.png'));\n    };\n    let auth = async () => {\n      let user = store.getters.getUsers.filter(el => el.username === name.value);\n      user ? user = user[0] : console.log('Такой пользователь не найден');\n      try {\n        const {\n          data\n        } = await axios.post('auth/login', {\n          username: name.value,\n          password: password.value\n        });\n        if (data) {\n          axios.defaults.headers.common['Authorization'] = `Bearer ${data.token}`;\n          if (user.role === 'ROLE_ADMIN') {\n            store.commit('setAdmin');\n          }\n          store.commit('setAuth');\n          store.commit('setUserId', store.getters.getUsers.filter(el => el.email === mail.value).map(map => map.id).toString());\n          closeAuthBlock();\n          store.commit('setNotificationInfo', {\n            titleValue: 'Успех',\n            text: 'Авторизация успешно пройдена',\n            mode: 'success'\n          });\n        } else {\n          mailRef.value.style.outline = '1px solid red';\n          passwordRef.value.style.outline = '1px solid red';\n        }\n      } catch (e) {\n        console.log('Ошибка: ', e.message);\n      }\n    };\n    let namePattern = /^[a-zA-Z0-9_-]{4,16}$/;\n    // Имя пользователя от 4 до 16 символов (буквы, цифры, подчеркивания, знаки минус)\n    let passwordPattern = /^.*(?=.{6,})(?=.*\\d)(?=.*[A-Z])(?=.*[a-z])(?=.*[!@#$%^&*? ]).*$/;\n    // минимум 6 символов, включая, как минимум 1 заглавную букву, 1 строчную букву, 1 цифру, 1 спец символ\n    let mailPattern = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;\n    // Полноценная почта\n\n    let iteration = function () {\n      function nameFunction() {\n        if (!namePattern.test(name.value)) {\n          nameReg.value.style.outline = '1px solid red';\n          return false;\n        } else {\n          nameReg.value.style.outline = '1px solid black';\n          return true;\n        }\n      }\n      function mailFunction() {\n        if (!mailPattern.test(mail.value)) {\n          mailReg.value.style.outline = '1px solid red';\n          return false;\n        } else {\n          mailReg.value.style.outline = '1px solid black';\n          return true;\n        }\n      }\n      function passwordFunction() {\n        if (!passwordPattern.test(password.value)) {\n          passwordRef.value.style.outline = '1px solid red';\n          return false;\n        } else {\n          passwordRef.value.style.outline = '1px solid black';\n          return true;\n        }\n      }\n      function passwordEqualFunction() {\n        if (password.value !== repeatedPassword.value) {\n          passwordRef_2.value.style.outline = '1px solid red';\n          return false;\n        } else {\n          passwordRef_2.value.style.outline = '1px solid black';\n          return true;\n        }\n      }\n      function locationEmptyCheck() {\n        if (selectLocation.value === '') {\n          selectLocationRef.value.style.outline = '1px solid red';\n          return false;\n        } else {\n          passwordRef_2.value.style.outline = '1px solid black';\n          return true;\n        }\n      }\n      if (nameFunction && mailFunction() && passwordFunction() && passwordEqualFunction() && locationEmptyCheck()) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n    let register = function () {\n      if (iteration()) {\n        store.getters.getUsers.push({\n          id: store.getters.getUsers.length + 1,\n          name: name.value,\n          mail: mail.value,\n          password: password.value,\n          status: 'user',\n          history: []\n        });\n        closeAuthBlock();\n      }\n      store.commit('setNotificationInfo', {\n        titleValue: 'Успех',\n        text: 'Регистрация успешно пройдена',\n        mode: 'success'\n      });\n    };\n    return {\n      name,\n      mail,\n      password,\n      repeatedPassword,\n      selectLocation,\n      passwordToggle,\n      passwordImage,\n      passwordRef,\n      passwordImage_2,\n      passwordRef_2,\n      selectLocationRef,\n      store,\n      closeAuthBlock,\n      isLogin,\n      auth,\n      register,\n      nameReg,\n      mailReg,\n      mailRef\n    };\n  }\n};","map":{"version":3,"names":["ref","store","axios","name","setup","isLogin","dispatch","passwordImage","passwordRef","passwordImage_2","passwordRef_2","mailRef","selectLocationRef","nameReg","mailReg","mail","password","repeatedPassword","selectLocation","closeAuthBlock","commit","document","body","style","overflow","passwordToggle","passRef","passImage","setAttribute","getAttribute","require","auth","user","getters","getUsers","filter","el","username","value","console","log","data","post","defaults","headers","common","token","role","email","map","id","toString","titleValue","text","mode","outline","e","message","namePattern","passwordPattern","mailPattern","iteration","nameFunction","test","mailFunction","passwordFunction","passwordEqualFunction","locationEmptyCheck","register","push","length","status","history"],"sources":["E:\\Vue\\career_guidance\\src\\components\\TheAuth.vue"],"sourcesContent":["<template>\r\n<div class=\"auth\" v-if=\"store.getters.getOpenedAuth\">\r\n  <div class=\"auth__mask\" @click=\"closeAuthBlock\"></div><!-- ./login__mask -->\r\n\r\n  <form v-if=\"isLogin\" class=\"auth__wrapper\" @submit.prevent=\"auth\">\r\n    <div class=\"auth__intro\">\r\n      <h1 class=\"auth__name\">Вход</h1>\r\n      <img class=\"auth__close\" src=\"../images/png/Close.png\" alt=\"close\" @click=\"closeAuthBlock\">\r\n    </div><!--./auth__intro -->\r\n    <div class=\"auth__inputs\">\r\n      <div class=\"auth__inputs-item\">\r\n        <input placeholder=\"Логин\" type=\"text\" v-model.trim=\"name\" ref=\"mailRef\">\r\n      </div><!-- ./auth__inputs-item -->\r\n      <div class=\"auth__inputs-item\">\r\n        <input placeholder=\"Пароль\" type=\"password\" v-model.trim=\"password\" ref=\"passwordRef\">\r\n        <img\r\n             @click=\"passwordToggle(passwordRef, passwordImage)\"\r\n             class=\"auth__inputs-itemEye\"\r\n             src=\"../images/png/eye_opened.png\"\r\n             alt=\"visible/invisible password\"\r\n             ref=\"passwordImage\"\r\n        >\r\n      </div><!-- ./auth__inputs-item -->\r\n    </div><!-- ./auth__inputs -->\r\n    <button type=\"submit\" class=\"btn blue auth__button\">Войти</button><!-- ./auth__button -->\r\n    <router-link to=\"/reset\" class=\"auth__forgot\" @click=\"store.commit('toggleOpenedAuth')\">Забыли пароль?</router-link>\r\n    <button class=\"auth__reg\" type=\"button\" @click=\"isLogin = false\">Быстрая регистрация</button>\r\n  </form><!-- ./auth__wrapper -->\r\n\r\n  <form v-else class=\"auth__wrapper\">\r\n    <div class=\"auth__intro\">\r\n      <h1 class=\"auth__name\">Регистрация</h1>\r\n      <img class=\"auth__close\" src=\"../images/png/Close.png\" alt=\"close\" @click=\"closeAuthBlock\">\r\n    </div><!--./auth__intro -->\r\n    <div class=\"auth__inputs\">\r\n      <div class=\"auth__inputs-item\">\r\n        <input placeholder=\"Имя\" type=\"text\" v-model.trim=\"name\" ref=\"nameReg\">\r\n      </div><!-- ./auth__inputs-item -->\r\n      <div class=\"auth__inputs-item\">\r\n        <input placeholder=\"Почта\" type=\"text\" v-model.trim=\"mail\" ref=\"mailReg\">\r\n      </div><!-- ./auth__inputs-item -->\r\n      <div class=\"auth__inputs-item\">\r\n        <input placeholder=\"Пароль\" type=\"password\" v-model.trim=\"password\" ref=\"passwordRef\">\r\n        <img\r\n            @click=\"passwordToggle(passwordRef, passwordImage)\"\r\n            class=\"auth__inputs-itemEye\"\r\n            src=\"../images/png/eye_opened.png\"\r\n            alt=\"visible/invisible password\"\r\n            ref=\"passwordImage\"\r\n        >\r\n      </div><!-- ./auth__inputs-item -->\r\n      <div class=\"auth__inputs-item\">\r\n        <input placeholder=\"Подтвердить пароль\" type=\"password\" v-model.trim=\"repeatedPassword\" ref=\"passwordRef_2\">\r\n        <img\r\n            @click=\"passwordToggle(passwordRef_2, passwordImage_2)\"\r\n            class=\"auth__inputs-itemEye\"\r\n            src=\"../images/png/eye_opened.png\"\r\n            alt=\"visible/invisible password\"\r\n            ref=\"passwordImage_2\"\r\n        >\r\n      </div><!-- ./auth__inputs-item -->\r\n      <div class=\"auth__inputs-item\">\r\n        <select name=\"\" id=\"\" v-model=\"selectLocation\" ref=\"selectLocationRef\">\r\n          <option value>Выберите город</option>\r\n          <option value=\"Алматы\">Алматы</option>\r\n          <option value=\"Нур-Султан\">Нур-Султан</option>\r\n          <option value=\"Шымкент\">Шымкент</option>\r\n          <option value=\"Туркестан\">Туркестан</option>\r\n        </select>\r\n      </div>\r\n\r\n    </div><!-- ./auth__inputs -->\r\n    <button type=\"submit\" class=\"auth__button btn blue\" @click.prevent=\"register\">Регистрация</button><!-- ./auth__button -->\r\n    <a @click=\"isLogin = true\" class=\"auth__forgot\" href=\"#\">Назад</a>\r\n  </form><!-- ./auth__wrapper -->\r\n\r\n</div><!-- ./auth -->\r\n</template>\r\n\r\n<script>\r\nimport {ref} from \"vue\";\r\nimport store from \"@/store\";\r\nimport axios from \"axios\";\r\nexport default {\r\n  name: \"Login\",\r\n  async setup () {\r\n    let isLogin = ref(true)\r\n    await store.dispatch(\"setAllUsers\");\r\n\r\n    const passwordImage = ref(null)\r\n    const passwordRef = ref(null)\r\n    const passwordImage_2 = ref(null)\r\n    const passwordRef_2 = ref(null)\r\n    const mailRef = ref(null)\r\n    const selectLocationRef = ref(null)\r\n\r\n    const nameReg = ref(null);\r\n    const mailReg = ref(null);\r\n\r\n    let name = ref('');\r\n    let mail = ref('');\r\n    let password = ref('');\r\n    let repeatedPassword = ref('');\r\n    let selectLocation = ref('')\r\n\r\n    let closeAuthBlock = function () {\r\n      store.commit('toggleOpenedAuth');\r\n      document.body.style.overflow = \"auto\";\r\n    }\r\n\r\n    let passwordToggle = function (passRef, passImage) {\r\n      passRef.setAttribute('type',\r\n          passRef.getAttribute('type') === 'password' ? 'text' : 'password');\r\n      passImage.setAttribute('src',\r\n          passImage.getAttribute('src') === require('../images/png/eye_opened.png') ?\r\n              require('../images/png/eye_closed.png') : require('../images/png/eye_opened.png'));\r\n    }\r\n\r\n    let auth = async () => {\r\n      let user = store.getters.getUsers.filter((el) => el.username === name.value);\r\n      user ? user = user[0] : console.log('Такой пользователь не найден')\r\n\r\n      try {\r\n        const {data} = await axios\r\n            .post('auth/login', {\r\n              username: name.value,\r\n              password: password.value\r\n            });\r\n\r\n        if (data) {\r\n          axios.defaults.headers.common['Authorization'] = `Bearer ${data.token}`\r\n          if(user.role === 'ROLE_ADMIN') {\r\n            store.commit('setAdmin');\r\n          }\r\n          store.commit('setAuth');\r\n          store.commit('setUserId', store.getters.getUsers.filter((el) => el.email === mail.value).map(map => map.id).toString());\r\n          closeAuthBlock();\r\n          store.commit('setNotificationInfo', { titleValue: 'Успех', text: 'Авторизация успешно пройдена', mode: 'success'} )\r\n        }\r\n        else {\r\n          mailRef.value.style.outline = '1px solid red';\r\n          passwordRef.value.style.outline = '1px solid red';\r\n        }\r\n      }\r\n      catch (e) {\r\n        console.log('Ошибка: ', e.message)\r\n      }\r\n    }\r\n\r\n    let namePattern = /^[a-zA-Z0-9_-]{4,16}$/;\r\n    // Имя пользователя от 4 до 16 символов (буквы, цифры, подчеркивания, знаки минус)\r\n    let passwordPattern = /^.*(?=.{6,})(?=.*\\d)(?=.*[A-Z])(?=.*[a-z])(?=.*[!@#$%^&*? ]).*$/;\r\n    // минимум 6 символов, включая, как минимум 1 заглавную букву, 1 строчную букву, 1 цифру, 1 спец символ\r\n    let mailPattern = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;\r\n    // Полноценная почта\r\n\r\n    let iteration = function () {\r\n\r\n      function nameFunction() {\r\n        if (!namePattern.test(name.value)) {\r\n          nameReg.value.style.outline = '1px solid red';\r\n          return false\r\n        } else {\r\n          nameReg.value.style.outline = '1px solid black';\r\n          return true\r\n        }\r\n      }\r\n\r\n      function mailFunction() {\r\n        if (!mailPattern.test(mail.value)) {\r\n          mailReg.value.style.outline = '1px solid red';\r\n          return false\r\n        } else {\r\n          mailReg.value.style.outline = '1px solid black';\r\n          return true\r\n        }\r\n      }\r\n\r\n      function passwordFunction() {\r\n        if (!passwordPattern.test(password.value)) {\r\n          passwordRef.value.style.outline = '1px solid red';\r\n          return false\r\n        } else {\r\n          passwordRef.value.style.outline = '1px solid black';\r\n          return true\r\n        }\r\n      }\r\n\r\n      function passwordEqualFunction() {\r\n        if (password.value !== repeatedPassword.value) {\r\n          passwordRef_2.value.style.outline = '1px solid red';\r\n          return false\r\n        } else {\r\n          passwordRef_2.value.style.outline = '1px solid black';\r\n          return true\r\n        }\r\n      }\r\n\r\n      function locationEmptyCheck() {\r\n        if(selectLocation.value === '') {\r\n          selectLocationRef.value.style.outline = '1px solid red';\r\n          return false\r\n        } else {\r\n          passwordRef_2.value.style.outline = '1px solid black';\r\n          return true\r\n        }\r\n      }\r\n\r\n      if (nameFunction && mailFunction() && passwordFunction() && passwordEqualFunction() && locationEmptyCheck()) {\r\n        return true\r\n      }\r\n      else {\r\n        return false\r\n      }\r\n    }\r\n\r\n    let register = function () {\r\n      if (iteration()) {\r\n        store.getters.getUsers.push({\r\n          id: store.getters.getUsers.length + 1,\r\n          name: name.value,\r\n          mail: mail.value,\r\n          password: password.value,\r\n          status: 'user',\r\n          history: []\r\n        })\r\n        closeAuthBlock();\r\n      }\r\n      store.commit('setNotificationInfo', { titleValue: 'Успех', text: 'Регистрация успешно пройдена', mode: 'success'} )\r\n    }\r\n\r\n    return {\r\n      name, mail, password, repeatedPassword, selectLocation,\r\n      passwordToggle,\r\n      passwordImage, passwordRef, passwordImage_2, passwordRef_2, selectLocationRef,\r\n      store,\r\n      closeAuthBlock,\r\n      isLogin,\r\n      auth, register,\r\n      nameReg, mailReg, mailRef\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}