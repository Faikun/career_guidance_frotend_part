{"ast":null,"code":"import { createStore } from 'vuex';\nimport { ref } from \"vue\";\nimport category from \"@/store/modules/category\";\nimport Universities from \"@/store/modules/Universities\";\nimport Category from \"@/store/modules/category\";\nimport ProfessionsArray from \"@/store/modules/professionsArray\";\nexport default createStore({\n  state: {\n    isAuth: false,\n    isAdmin: false,\n    userId: null,\n    openedAuth: false,\n    users: [{\n      userId: 1,\n      name: 'user',\n      mail: 'mail@gmail.com',\n      password: 'qwerty',\n      status: 'admin',\n      location: 'Алматы',\n      history: []\n    }, {\n      userId: 2,\n      name: 'guest',\n      mail: 'guest@gmail.com',\n      password: 'guestPass',\n      status: 'user',\n      location: 'Нур-Султан',\n      history: []\n    }, {\n      userId: 3,\n      name: 'third',\n      mail: 'third@gmail.com',\n      password: 'third',\n      status: 'user',\n      location: 'Туркестан',\n      history: []\n    }],\n    notification: ref({\n      title: '',\n      text: '',\n      mode: '',\n      openedNotification: false\n    })\n  },\n  getters: {\n    getAuth(state) {\n      return state.isAuth;\n    },\n    getAdmin(state) {\n      return state.isAdmin;\n    },\n    getOpenedAuth(state) {\n      return state.openedAuth;\n    },\n    getUsers(state) {\n      return state.users;\n    },\n    getUserId(state) {\n      return state.userId;\n    },\n    getNotificationInfo(state) {\n      return state.notification;\n    }\n  },\n  mutations: {\n    toggleOpenedAuth(state) {\n      state.openedAuth = !state.openedAuth;\n    },\n    setAuth(state) {\n      state.isAuth = !state.isAuth;\n    },\n    setAdmin(state) {\n      state.isAdmin = !state.isAdmin;\n    },\n    setUserId(state, value) {\n      state.userId = value;\n    },\n    setNotificationBool(state) {\n      state.notification.openedNotification = false;\n    },\n    setNotificationInfo(state, payload) {\n      state.notification.title = payload.titleValue;\n      state.notification.text = payload.text;\n      state.notification.mode = payload.mode;\n      state.notification.openedNotification = true;\n    },\n    setUsers(state, payload) {\n      state.users[payload.id].name = payload.name;\n      state.users[payload.id].mail = payload.mail;\n      state.users[payload.id].password = payload.password;\n      state.users[payload.id].status = payload.status;\n      state.users[payload.id].location = payload.location;\n    },\n    removeUser(state, index) {\n      state.users.splice(index, 1);\n    }\n  },\n  actions: {},\n  modules: {\n    university: Universities,\n    category: Category,\n    professionsArray: ProfessionsArray\n  }\n});","map":{"version":3,"names":["createStore","ref","category","Universities","Category","ProfessionsArray","state","isAuth","isAdmin","userId","openedAuth","users","name","mail","password","status","location","history","notification","title","text","mode","openedNotification","getters","getAuth","getAdmin","getOpenedAuth","getUsers","getUserId","getNotificationInfo","mutations","toggleOpenedAuth","setAuth","setAdmin","setUserId","value","setNotificationBool","setNotificationInfo","payload","titleValue","setUsers","id","removeUser","index","splice","actions","modules","university","professionsArray"],"sources":["E:/Vue/career_guidance/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\nimport {ref} from \"vue\";\nimport category from \"@/store/modules/category\";\nimport Universities from \"@/store/modules/Universities\";\nimport Category from \"@/store/modules/category\";\nimport ProfessionsArray from \"@/store/modules/professionsArray\";\nexport default createStore({\n  state: {\n    isAuth: false,\n    isAdmin: false,\n    userId: null,\n    openedAuth: false,\n    users: [\n      {\n        userId: 1,\n        name: 'user',\n        mail: 'mail@gmail.com',\n        password: 'qwerty',\n        status: 'admin',\n        location: 'Алматы',\n        history: []\n      },\n      {\n        userId: 2,\n        name: 'guest',\n        mail: 'guest@gmail.com',\n        password: 'guestPass',\n        status: 'user',\n        location: 'Нур-Султан',\n        history: []\n      },\n      {\n        userId: 3,\n        name: 'third',\n        mail: 'third@gmail.com',\n        password: 'third',\n        status: 'user',\n        location: 'Туркестан',\n        history: []\n      }\n    ],\n    notification: ref({\n      title: '',\n      text: '',\n      mode: '',\n      openedNotification: false\n    })\n  },\n  getters: {\n    getAuth(state) {\n      return state.isAuth\n    },\n    getAdmin(state) {\n      return state.isAdmin\n    },\n    getOpenedAuth(state) {\n      return state.openedAuth\n    },\n    getUsers(state) {\n      return state.users\n    },\n    getUserId(state) {\n      return state.userId\n    },\n    getNotificationInfo(state) {\n      return state.notification\n    }\n  },\n  mutations: {\n    toggleOpenedAuth(state) {\n      state.openedAuth = !state.openedAuth;\n    },\n    setAuth(state) {\n      state.isAuth = !state.isAuth\n    },\n    setAdmin(state) {\n      state.isAdmin = !state.isAdmin\n    },\n    setUserId(state, value) {\n      state.userId = value\n    },\n    setNotificationBool(state) {\n      state.notification.openedNotification = false;\n    },\n    setNotificationInfo(state, payload) {\n      state.notification.title = payload.titleValue;\n      state.notification.text = payload.text;\n      state.notification.mode = payload.mode;\n      state.notification.openedNotification = true;\n    },\n    setUsers(state, payload) {\n      state.users[payload.id].name = payload.name;\n      state.users[payload.id].mail = payload.mail;\n      state.users[payload.id].password = payload.password;\n      state.users[payload.id].status = payload.status;\n      state.users[payload.id].location = payload.location;\n    },\n    removeUser(state, index) {\n      state.users.splice(index, 1);\n    }\n  },\n  actions: {\n  },\n  modules: {\n    university: Universities,\n    category: Category,\n    professionsArray: ProfessionsArray\n  }\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}