{"ast":null,"code":"import Comments from \"@/components/Comments.vue\";\nimport { useStore } from \"vuex\";\nexport default {\n  name: \"Result\",\n  components: {\n    Comments\n  },\n  setup() {\n    let store = useStore();\n    let auth = function () {\n      store.commit('toggleOpenedAuth');\n      document.body.style.overflow = \"hidden\";\n    };\n    const result = store.getters.getUsers.filter(el => el.userId.toString() === store.getters.getUserId)[0].history;\n    return {\n      store,\n      auth,\n      result\n    };\n  }\n};","map":{"version":3,"names":["Comments","useStore","name","components","setup","store","auth","commit","document","body","style","overflow","result","getters","getUsers","filter","el","userId","toString","getUserId","history"],"sources":["E:\\Vue\\career_guidance\\src\\views\\Result.vue"],"sourcesContent":["<template>\r\n<div class=\"result\">\r\n  <h1 class=\"result__title\">Результаты</h1>\r\n  <h3 class=\"test__completed\">Поздравляем! Вы успешно сдали тест</h3>\r\n  <div v-if=\"store.getters.getAuth\" class=\"result__show\">\r\n    <span>Итоги теста: </span>\r\n    <div>{{  }}</div>\r\n  </div><!-- ./result__show -->\r\n  <div v-else class=\"result__auth\">\r\n    <div class=\"result__statement\">Чтобы увидеть результат, пожалуйста, пройдите регистрацию или войдите в свою учётную запись</div>\r\n    <div class=\"result__auth-links\">\r\n      <a href=\"#\" @click=\"auth\">Войти в аккаунт</a>\r\n      <a href=\"#\" @click=\"auth\">Зарегестрироваться</a>\r\n    </div>\r\n  </div><!-- ./result__auth -->\r\n  <comments></comments>\r\n</div><!-- ./result -->\r\n</template>\r\n\r\n<script>\r\nimport Comments from \"@/components/Comments.vue\";\r\nimport {useStore} from \"vuex\";\r\n\r\nexport default {\r\n  name: \"Result\",\r\n  components: {Comments},\r\n  setup() {\r\n    let store = useStore();\r\n    let auth = function () {\r\n      store.commit('toggleOpenedAuth');\r\n      document.body.style.overflow = \"hidden\";\r\n    }\r\n    const result = store.getters.getUsers.filter((el) => el.userId.toString() === store.getters.getUserId)[0].history;\r\n    return {\r\n      store,\r\n      auth,\r\n      result\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"mappings":"AAoBA,OAAOA,QAAO,MAAO,2BAA2B;AAChD,SAAQC,QAAQ,QAAO,MAAM;AAE7B,eAAe;EACbC,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE;IAACH;EAAQ,CAAC;EACtBI,KAAKA,CAAA,EAAG;IACN,IAAIC,KAAI,GAAIJ,QAAQ,EAAE;IACtB,IAAIK,IAAG,GAAI,SAAAA,CAAA,EAAY;MACrBD,KAAK,CAACE,MAAM,CAAC,kBAAkB,CAAC;MAChCC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,QAAO,GAAI,QAAQ;IACzC;IACA,MAAMC,MAAK,GAAIP,KAAK,CAACQ,OAAO,CAACC,QAAQ,CAACC,MAAM,CAAEC,EAAE,IAAKA,EAAE,CAACC,MAAM,CAACC,QAAQ,EAAC,KAAMb,KAAK,CAACQ,OAAO,CAACM,SAAS,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO;IACjH,OAAO;MACLf,KAAK;MACLC,IAAI;MACJM;IACF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}