{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { computed, ref } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { useRoute } from \"vue-router\";\nimport router from \"@/router\";\nimport axios from \"axios\";\nexport default {\n  name: \"TestTemplate\",\n  async setup() {\n    let questionNum = ref(0);\n    const store = useStore();\n    const route = useRoute();\n    await store.dispatch(\"initialQuestionList\");\n    const tests = computed(() => store.getters.getTests);\n    const routeName = computed(() => route.params.name);\n    const test = tests.value.filter(el => el.name === routeName.value)[0].questions;\n    let chosenAns = new Array(test.length);\n    let firstUnanswered = computed(() => test.findIndex(test => test.isAnswered === false));\n    let checkQuestionCompleted = computed(() => test.reduce((accumulator, currentValue) => accumulator + (currentValue.isAnswered ? 1 : 0), 0));\n    const sendAnswers = async chosenAns => {\n      await axios.post('http://localhost:8081/answers/send', chosenAns).then(function (response) {\n        console.log(response);\n      });\n    };\n    let nextQuestion = function (question, answer, chosenAnswer) {\n      if (checkQuestionCompleted.value + 1 !== test.length) {\n        this.test[question].isAnswered = true;\n        chosenAns[question] = chosenAnswer;\n        // this.test[question].chosenAnswer = answer;\n\n        if (firstUnanswered.value > -1) {\n          questionNum.value = firstUnanswered.value;\n        } else {\n          questionNum.value++;\n        }\n      } else {\n        // this.test[question].isAnswered = true;\n        chosenAns[question] = chosenAnswer;\n        console.log(chosenAns);\n        sendAnswers(chosenAns);\n        setTimeout(() => {\n          router.push('/result');\n        }, 250);\n      }\n    };\n    return {\n      questionNum,\n      test,\n      nextQuestion,\n      checkQuestionCompleted\n    };\n  }\n};","map":{"version":3,"names":["computed","ref","useStore","useRoute","router","axios","name","setup","questionNum","store","route","dispatch","tests","getters","getTests","routeName","params","test","value","filter","el","questions","chosenAns","Array","length","firstUnanswered","findIndex","isAnswered","checkQuestionCompleted","reduce","accumulator","currentValue","sendAnswers","post","then","response","console","log","nextQuestion","question","answer","chosenAnswer","setTimeout","push"],"sources":["E:\\Vue\\career_guidance\\src\\components\\TestTemplate.vue"],"sourcesContent":["<template>\r\n  <div class=\"test__questionCounter\">Вопрос {{ questionNum + 1 }}</div>\r\n\r\n  <div class=\"test__question\">\r\n    <div class=\"test__question-name\"> {{ test[questionNum].question }} </div>\r\n    <div class=\"test__question-answers\">\r\n      <div\r\n          class=\"test__question-answer\"\r\n          v-for=\"answer in test[questionNum].answer\"\r\n          @click=\"nextQuestion(questionNum, test[questionNum], answer)\"\r\n      >\r\n        {{ answer }}\r\n      </div>\r\n    </div>\r\n  </div><!-- ./test__question -->\r\n  <div class=\"test__passed\">\r\n    Вы ответили на\r\n    {{ checkQuestionCompleted }}\r\n    из {{ test.length }} вопросов\r\n  </div>\r\n  <div class=\"test__questionNums\">\r\n    <div\r\n        :class=\"test[num-1].isAnswered ? 'active': ''\"\r\n        v-for=\"num in test.length\"\r\n        @click=\"questionNum = num-1\"\r\n        class=\"test__questionNum\">{{ num }}</div>\r\n  </div><!-- ./test__questionNums -->\r\n</template>\r\n\r\n<script>\r\nimport {computed, ref} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {useRoute} from \"vue-router\";\r\nimport router from \"@/router\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"TestTemplate\",\r\n  async setup() {\r\n    let questionNum = ref(0);\r\n    const store = useStore();\r\n    const route = useRoute();\r\n    await store.dispatch(\"initialQuestionList\");\r\n\r\n    const tests = computed(() => store.getters.getTests);\r\n    const routeName = computed(() => route.params.name);\r\n    const test = tests.value.filter((el) => el.name === routeName.value)[0].questions;\r\n    let chosenAns = new Array(test.length);\r\n\r\n    let firstUnanswered = computed(() => test.findIndex(test => test.isAnswered === false));\r\n    let checkQuestionCompleted = computed(() => test.reduce((accumulator, currentValue) => accumulator + (currentValue.isAnswered ? 1 : 0), 0));\r\n\r\n    const sendAnswers = async (chosenAns) => {\r\n      await axios.post('http://localhost:8081/answers/send', chosenAns)\r\n          .then(function (response) {\r\n            console.log(response);\r\n      });\r\n    }\r\n\r\n    let nextQuestion = function (question, answer, chosenAnswer) {\r\n      if(checkQuestionCompleted.value + 1 !== test.length) {\r\n        this.test[question].isAnswered = true\r\n        chosenAns[question] = chosenAnswer;\r\n        // this.test[question].chosenAnswer = answer;\r\n\r\n        if (firstUnanswered.value > -1) {\r\n          questionNum.value = firstUnanswered.value;\r\n        }\r\n        else {\r\n          questionNum.value++;\r\n        }\r\n      }\r\n      else {\r\n        // this.test[question].isAnswered = true;\r\n        chosenAns[question] = chosenAnswer;\r\n        console.log(chosenAns);\r\n        sendAnswers(chosenAns);\r\n        setTimeout(() => { router.push('/result'); }, 250);\r\n      }\r\n    }\r\n    return {\r\n      questionNum,\r\n      test,\r\n      nextQuestion,\r\n      checkQuestionCompleted\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"mappings":";AA8BA,SAAQA,QAAQ,EAAEC,GAAG,QAAO,KAAK;AACjC,SAAQC,QAAQ,QAAO,MAAM;AAC7B,SAAQC,QAAQ,QAAO,YAAY;AACnC,OAAOC,MAAK,MAAO,UAAU;AAC7B,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,cAAc;EACpB,MAAMC,KAAKA,CAAA,EAAG;IACZ,IAAIC,WAAU,GAAIP,GAAG,CAAC,CAAC,CAAC;IACxB,MAAMQ,KAAI,GAAIP,QAAQ,EAAE;IACxB,MAAMQ,KAAI,GAAIP,QAAQ,EAAE;IACxB,MAAMM,KAAK,CAACE,QAAQ,CAAC,qBAAqB,CAAC;IAE3C,MAAMC,KAAI,GAAIZ,QAAQ,CAAC,MAAMS,KAAK,CAACI,OAAO,CAACC,QAAQ,CAAC;IACpD,MAAMC,SAAQ,GAAIf,QAAQ,CAAC,MAAMU,KAAK,CAACM,MAAM,CAACV,IAAI,CAAC;IACnD,MAAMW,IAAG,GAAIL,KAAK,CAACM,KAAK,CAACC,MAAM,CAAEC,EAAE,IAAKA,EAAE,CAACd,IAAG,KAAMS,SAAS,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC,CAACG,SAAS;IACjF,IAAIC,SAAQ,GAAI,IAAIC,KAAK,CAACN,IAAI,CAACO,MAAM,CAAC;IAEtC,IAAIC,eAAc,GAAIzB,QAAQ,CAAC,MAAMiB,IAAI,CAACS,SAAS,CAACT,IAAG,IAAKA,IAAI,CAACU,UAAS,KAAM,KAAK,CAAC,CAAC;IACvF,IAAIC,sBAAqB,GAAI5B,QAAQ,CAAC,MAAMiB,IAAI,CAACY,MAAM,CAAC,CAACC,WAAW,EAAEC,YAAY,KAAKD,WAAU,IAAKC,YAAY,CAACJ,UAAS,GAAI,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAE3I,MAAMK,WAAU,GAAI,MAAOV,SAAS,IAAK;MACvC,MAAMjB,KAAK,CAAC4B,IAAI,CAAC,oCAAoC,EAAEX,SAAS,EAC3DY,IAAI,CAAC,UAAUC,QAAQ,EAAE;QACxBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MAC3B,CAAC,CAAC;IACJ;IAEA,IAAIG,YAAW,GAAI,SAAAA,CAAUC,QAAQ,EAAEC,MAAM,EAAEC,YAAY,EAAE;MAC3D,IAAGb,sBAAsB,CAACV,KAAI,GAAI,MAAMD,IAAI,CAACO,MAAM,EAAE;QACnD,IAAI,CAACP,IAAI,CAACsB,QAAQ,CAAC,CAACZ,UAAS,GAAI,IAAG;QACpCL,SAAS,CAACiB,QAAQ,IAAIE,YAAY;QAClC;;QAEA,IAAIhB,eAAe,CAACP,KAAI,GAAI,CAAC,CAAC,EAAE;UAC9BV,WAAW,CAACU,KAAI,GAAIO,eAAe,CAACP,KAAK;QAC3C,OACK;UACHV,WAAW,CAACU,KAAK,EAAE;QACrB;MACF,OACK;QACH;QACAI,SAAS,CAACiB,QAAQ,IAAIE,YAAY;QAClCL,OAAO,CAACC,GAAG,CAACf,SAAS,CAAC;QACtBU,WAAW,CAACV,SAAS,CAAC;QACtBoB,UAAU,CAAC,MAAM;UAAEtC,MAAM,CAACuC,IAAI,CAAC,SAAS,CAAC;QAAE,CAAC,EAAE,GAAG,CAAC;MACpD;IACF;IACA,OAAO;MACLnC,WAAW;MACXS,IAAI;MACJqB,YAAY;MACZV;IACF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}