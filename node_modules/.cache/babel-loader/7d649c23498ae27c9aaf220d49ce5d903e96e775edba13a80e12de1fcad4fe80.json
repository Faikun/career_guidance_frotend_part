{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"result\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"result__title\"\n}, \"Результаты\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h3\", {\n  class: \"test__completed\"\n}, \"Поздравляем! Вы успешно сдали тест\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h4\", {\n  class: \"test__completed\"\n}, \"Итоги теста:\", -1 /* HOISTED */);\nconst _hoisted_5 = {\n  key: 0,\n  class: \"result__show\"\n};\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = {\n  class: \"result__auth\"\n};\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"result__statement\"\n}, \"Чтобы увидеть результат, пожалуйста, пройдите регистрацию или войдите в свою учётную запись\", -1 /* HOISTED */);\nconst _hoisted_9 = {\n  class: \"result__auth-links\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_comments = _resolveComponent(\"comments\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _hoisted_3, _hoisted_4, $setup.store.getters.getAuth ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.finalRes, res => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: res[0],\n      class: \"result__show-item\",\n      onClick: $event => $setup.goToProf(res[0])\n    }, [_createElementVNode(\"span\", null, _toDisplayString(res[0]), 1 /* TEXT */), _createElementVNode(\"span\", null, _toDisplayString(res[1]), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_6);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" ./result__show \"), _createElementVNode(\"div\", _hoisted_7, [_hoisted_8, _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"a\", {\n    href: \"#\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.auth && $setup.auth(...args))\n  }, \"Войти в аккаунт\"), _createElementVNode(\"a\", {\n    href: \"#\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $setup.auth && $setup.auth(...args))\n  }, \"Зарегестрироваться\")])])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)), _createCommentVNode(\" ./result__auth \"), _createVNode(_component_comments)]), _createCommentVNode(\" ./result \")], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","$setup","store","getters","getAuth","_createElementBlock","_hoisted_5","_Fragment","_renderList","finalRes","res","key","onClick","$event","goToProf","_toDisplayString","_createCommentVNode","_hoisted_7","_hoisted_8","_hoisted_9","href","_cache","args","auth","_createVNode","_component_comments"],"sources":["E:\\Vue\\career_guidance\\src\\views\\Result.vue"],"sourcesContent":["<template>\r\n<div class=\"result\">\r\n  <h1 class=\"result__title\">Результаты</h1>\r\n  <h3 class=\"test__completed\">Поздравляем! Вы успешно сдали тест</h3>\r\n  <h4 class=\"test__completed\">Итоги теста:</h4>\r\n  <ul v-if=\"store.getters.getAuth\" class=\"result__show\">\r\n    <li v-for=\"res in finalRes\" :key=\"res[0]\" class=\"result__show-item\" @click=\"goToProf(res[0])\">\r\n      <span>{{ res[0] }}</span>\r\n      <span>{{ res[1] }}</span>\r\n    </li>\r\n  </ul><!-- ./result__show -->\r\n  <div v-else class=\"result__auth\">\r\n    <div class=\"result__statement\">Чтобы увидеть результат, пожалуйста, пройдите регистрацию или войдите в свою учётную запись</div>\r\n    <div class=\"result__auth-links\">\r\n      <a href=\"#\" @click=\"auth\">Войти в аккаунт</a>\r\n      <a href=\"#\" @click=\"auth\">Зарегестрироваться</a>\r\n    </div>\r\n  </div><!-- ./result__auth -->\r\n  <comments></comments>\r\n</div><!-- ./result -->\r\n</template>\r\n\r\n<script>\r\nimport Comments from \"@/components/Comments.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {computed, watch} from \"vue\";\r\nimport {useRouter} from \"vue-router\";\r\n\r\nexport default {\r\n  name: \"Result\",\r\n  components: {Comments},\r\n  setup() {\r\n    let store = useStore();\r\n    let router = useRouter();\r\n    let auth = function () {\r\n      store.commit('toggleOpenedAuth');\r\n      document.body.style.overflow = \"hidden\";\r\n    }\r\n    let finalRes = {\r\n      name: '',\r\n      result: []\r\n    };\r\n\r\n    const isAuth = computed(() => store.getters.getAuth)\r\n    const users = computed(() => store.getters.getUsers)\r\n\r\n    if(isAuth.value) {\r\n      const result = JSON.parse(localStorage.getItem('test'))\r\n      finalRes['name'] = result.name\r\n      finalRes['result'] = result.result\r\n    }\r\n\r\n    watch(isAuth, (newValue, oldValue) => {\r\n      if(newValue) {\r\n        const result = JSON.parse(localStorage.getItem('test'));\r\n        users.value.filter((el) => el.email.toString() === store.getters.getUserId)[0].history = Object.entries(result);\r\n        Object.entries(result).forEach((el) => finalRes.push(el))\r\n      }\r\n    })\r\n\r\n    const professionsArray = store.getters.getProfessionsArray;\r\n\r\n    const goToProf = function (name) {\r\n      const prof = professionsArray.filter((el) => el.name === name)[0];\r\n      router.push({ name: 'Profession', params: { name: prof.category, prof: prof.name }})\r\n    }\r\n\r\n    return {\r\n      store,\r\n      auth,\r\n      finalRes,\r\n      goToProf\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":";;EACKA,KAAK,EAAC;AAAQ;gCACjBC,mBAAA,CAAyC;EAArCD,KAAK,EAAC;AAAe,GAAC,YAAU;gCACpCC,mBAAA,CAAmE;EAA/DD,KAAK,EAAC;AAAiB,GAAC,oCAAkC;gCAC9DC,mBAAA,CAA6C;EAAzCD,KAAK,EAAC;AAAiB,GAAC,cAAY;;;EACPA,KAAK,EAAC;;;;EAM3BA,KAAK,EAAC;AAAc;gCAC9BC,mBAAA,CAAgI;EAA3HD,KAAK,EAAC;AAAmB,GAAC,6FAA2F;;EACrHA,KAAK,EAAC;AAAoB;;;6DAZnCC,mBAAA,CAkBM,OAlBNC,UAkBM,GAjBJC,UAAyC,EACzCC,UAAmE,EACnEC,UAA6C,EACnCC,MAAA,CAAAC,KAAK,CAACC,OAAO,CAACC,OAAO,I,cAA/BC,mBAAA,CAKK,MALLC,UAKK,I,kBAJHD,mBAAA,CAGKE,SAAA,QAAAC,WAAA,CAHaP,MAAA,CAAAQ,QAAQ,EAAfC,GAAG;yBAAdL,mBAAA,CAGK;MAHwBM,GAAG,EAAED,GAAG;MAAKf,KAAK,EAAC,mBAAmB;MAAEiB,OAAK,EAAAC,MAAA,IAAEZ,MAAA,CAAAa,QAAQ,CAACJ,GAAG;QACtFd,mBAAA,CAAyB,cAAAmB,gBAAA,CAAhBL,GAAG,qBACZd,mBAAA,CAAyB,cAAAmB,gBAAA,CAAhBL,GAAG,oB;qDAGhBL,mBAAA,CAMME,SAAA;IAAAI,GAAA;EAAA,IAPDK,mBAAA,oBAAuB,EAC5BpB,mBAAA,CAMM,OANNqB,UAMM,GALJC,UAAgI,EAChItB,mBAAA,CAGM,OAHNuB,UAGM,GAFJvB,mBAAA,CAA6C;IAA1CwB,IAAI,EAAC,GAAG;IAAER,OAAK,EAAAS,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAErB,MAAA,CAAAsB,IAAA,IAAAtB,MAAA,CAAAsB,IAAA,IAAAD,IAAA,CAAI;KAAE,iBAAe,GACzC1B,mBAAA,CAAgD;IAA7CwB,IAAI,EAAC,GAAG;IAAER,OAAK,EAAAS,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAErB,MAAA,CAAAsB,IAAA,IAAAtB,MAAA,CAAAsB,IAAA,IAAAD,IAAA,CAAI;KAAE,oBAAkB,E,uDAE1CN,mBAAA,oBAAuB,EAC7BQ,YAAA,CAAqBC,mBAAA,E,GACjBT,mBAAA,cAAiB,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}