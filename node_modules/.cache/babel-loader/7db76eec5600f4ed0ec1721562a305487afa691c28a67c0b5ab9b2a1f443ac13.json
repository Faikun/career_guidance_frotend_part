{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { computed, ref } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { useRoute } from \"vue-router\";\nimport router from \"@/router\";\nexport default {\n  name: \"TestTemplate\",\n  async setup() {\n    let questionNum = ref(0);\n    const store = useStore();\n    const route = useRoute();\n    await store.dispatch(\"initialQuestionList\");\n    const tests = computed(() => store.getters.getTests);\n    const users = computed(() => store.getters.getUsers);\n    const routeName = computed(() => route.params.name);\n    const test = tests.value.filter(el => el.name === routeName.value)[0].questions;\n    let allTest = [];\n    for (let i = 0; i < test.length; i++) {\n      const innerArray = test[i].questions;\n      for (let j = 0; j < innerArray.length; j++) {\n        allTest.push(innerArray[j]);\n      }\n    }\n    let chosenAns = new Array(test.length);\n    let firstUnanswered = computed(() => test.findIndex(test => test.isAnswered === false));\n    let checkQuestionCompleted = computed(() => test.reduce((accumulator, currentValue) => accumulator + (currentValue.isAnswered ? 1 : 0), 0));\n    const sendAnswers = async chosenAns => {\n      let response = await fetch('http://localhost:8081/api/answers/send', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(chosenAns)\n      });\n      const result = await response.json();\n      return JSON.stringify(result);\n    };\n    function shuffleArray(array) {\n      for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n      }\n      return array;\n    }\n    let nextQuestion = async function (question, answer, chosenAnswer) {\n      console.log(question, answer, chosenAnswer);\n      if (checkQuestionCompleted.value + 1 !== test.length) {\n        this.test[question].isAnswered = true;\n        chosenAns[question] = chosenAnswer;\n        if (firstUnanswered.value > -1) {\n          questionNum.value = firstUnanswered.value;\n        } else {\n          questionNum.value++;\n        }\n      } else {\n        chosenAns[question] = chosenAnswer;\n        const result = await sendAnswers(chosenAns);\n        if (store.getters.getAuth) {\n          users.value.filter(el => el.id.toString() === store.getters.getUserId)[0].history = Object.entries(JSON.parse(result));\n        } else {\n          localStorage.setItem('test', result);\n        }\n        setTimeout(() => {\n          router.push('/result');\n        }, 250);\n      }\n    };\n    return {\n      questionNum,\n      test,\n      nextQuestion,\n      checkQuestionCompleted,\n      allTest: shuffleArray(allTest)\n    };\n  }\n};","map":{"version":3,"names":["computed","ref","useStore","useRoute","router","name","setup","questionNum","store","route","dispatch","tests","getters","getTests","users","getUsers","routeName","params","test","value","filter","el","questions","allTest","i","length","innerArray","j","push","chosenAns","Array","firstUnanswered","findIndex","isAnswered","checkQuestionCompleted","reduce","accumulator","currentValue","sendAnswers","response","fetch","method","headers","body","JSON","stringify","result","json","shuffleArray","array","Math","floor","random","nextQuestion","question","answer","chosenAnswer","console","log","getAuth","id","toString","getUserId","history","Object","entries","parse","localStorage","setItem","setTimeout"],"sources":["E:\\Vue\\career_guidance\\src\\components\\TestTemplate.vue"],"sourcesContent":["<template>\r\n  <div class=\"test__questionCounter\">Вопрос {{ questionNum + 1 }}</div>\r\n\r\n  <div class=\"test__question\">\r\n    <div class=\"test__question-name\"> {{ allTest[questionNum].question }} </div>\r\n    <div class=\"test__question-answers\">\r\n      <div class=\"test__question-answer\" @click=\"nextQuestion(questionNum, allTest(questionNum))\">Да</div>\r\n      <div class=\"test__question-answer\" @click=\"nextQuestion(questionNum, allTest(questionNum))\">Нет</div>\r\n      <div class=\"test__question-answer\" @click=\"nextQuestion(questionNum, allTest(questionNum))\">Затрудняюсь ответить</div>\r\n    </div>\r\n  </div><!-- ./test__question -->\r\n  <div class=\"test__passed\">\r\n    Вы ответили на\r\n    {{ checkQuestionCompleted }}\r\n    из {{ allTest.length }} вопросов\r\n  </div>\r\n  <div class=\"test__questionNums\">\r\n    <div\r\n        :class=\"test[num-1].isAnswered ? 'active': ''\"\r\n        v-for=\"num in test.length\"\r\n        @click=\"questionNum = num-1\"\r\n        class=\"test__questionNum\">{{ num }}</div>\r\n  </div><!-- ./test__questionNums -->\r\n</template>\r\n\r\n<script>\r\nimport {computed, ref} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {useRoute} from \"vue-router\";\r\nimport router from \"@/router\";\r\n\r\nexport default {\r\n  name: \"TestTemplate\",\r\n  async setup() {\r\n    let questionNum = ref(0);\r\n    const store = useStore();\r\n    const route = useRoute();\r\n\r\n    await store.dispatch(\"initialQuestionList\");\r\n\r\n    const tests = computed(() => store.getters.getTests);\r\n    const users = computed(() => store.getters.getUsers);\r\n    const routeName = computed(() => route.params.name);\r\n    const test = tests.value.filter((el) => el.name === routeName.value)[0].questions;\r\n    let allTest = []\r\n\r\n    for (let i = 0; i < test.length; i++) {\r\n      const innerArray = test[i].questions;\r\n      for (let j = 0; j < innerArray.length; j++) {\r\n        allTest.push(innerArray[j]);\r\n      }\r\n    }\r\n\r\n    let chosenAns = new Array(test.length);\r\n\r\n    let firstUnanswered = computed(() => test.findIndex(test => test.isAnswered === false));\r\n    let checkQuestionCompleted = computed(() => test.reduce((accumulator, currentValue) => accumulator + (currentValue.isAnswered ? 1 : 0), 0));\r\n\r\n    const sendAnswers = async (chosenAns) => {\r\n      let response = await fetch('http://localhost:8081/api/answers/send', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(chosenAns)\r\n      })\r\n      const result = await response.json();\r\n      return JSON.stringify(result);\r\n    }\r\n\r\n    function shuffleArray(array) {\r\n      for (let i = array.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [array[i], array[j]] = [array[j], array[i]];\r\n      }\r\n      return array;\r\n    }\r\n\r\n    let nextQuestion = async function (question, answer, chosenAnswer) {\r\n      console.log(question, answer, chosenAnswer)\r\n      if (checkQuestionCompleted.value + 1 !== test.length) {\r\n        this.test[question].isAnswered = true\r\n        chosenAns[question] = chosenAnswer;\r\n\r\n        if (firstUnanswered.value > -1) {\r\n          questionNum.value = firstUnanswered.value;\r\n        } else {\r\n          questionNum.value++;\r\n        }\r\n      }\r\n      else {\r\n        chosenAns[question] = chosenAnswer;\r\n        const result = await sendAnswers(chosenAns);\r\n        if (store.getters.getAuth) {\r\n          users.value.filter((el) => el.id.toString() === store.getters.getUserId)[0].history = Object.entries(JSON.parse(result));\r\n        }\r\n        else {\r\n          localStorage.setItem('test', result);\r\n        }\r\n        setTimeout(() => {\r\n          router.push('/result');\r\n        }, 250);\r\n      }\r\n    }\r\n    return {\r\n      questionNum,\r\n      test,\r\n      nextQuestion,\r\n      checkQuestionCompleted,\r\n      allTest: shuffleArray(allTest)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}