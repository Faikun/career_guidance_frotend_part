{"ast":null,"code":"import axios from \"axios\";\nconst comments = {\n  state: {\n    comments: [{\n      user: \"username\",\n      date: \"01-04-2023\",\n      stars: \"4\",\n      comment: \"Хороший тест!\",\n      usersIdLikes: [1, 2],\n      usersIdDislikes: [3],\n      liked: false,\n      disliked: false,\n      openedInput: false,\n      inputValue: \"\",\n      answered: [{\n        user: \"username\",\n        date: \"02-04-2023\",\n        comment: \"Ответ на Хороший тест!\",\n        usersIdLikes: [1, 2],\n        usersIdDislikes: [],\n        liked: false,\n        disliked: false,\n        answered: []\n      }]\n    }, {\n      user: \"some user\",\n      date: \"12-03-2023\",\n      stars: \"5\",\n      comment: \"Отличный тест!\",\n      usersIdLikes: [1, 2],\n      usersIdDislikes: [],\n      liked: false,\n      disliked: false,\n      openedInput: false,\n      inputValue: \"\",\n      answered: []\n    }]\n  },\n  getters: {\n    getComments(state) {\n      return state.comments;\n    }\n  },\n  mutations: {\n    setComments(state, value) {\n      state.comments = value;\n    }\n  },\n  actions: {\n    async initialCommentsList({\n      commit\n    }) {\n      const url = 'https://prof-choose-default-rtdb.firebaseio.com/comments';\n      const comments = await fetch(url).then(resp => resp.json().then(data => commit(\"setComments\", data.data)));\n    }\n  }\n};\nexport default comments;","map":{"version":3,"names":["axios","comments","state","user","date","stars","comment","usersIdLikes","usersIdDislikes","liked","disliked","openedInput","inputValue","answered","getters","getComments","mutations","setComments","value","actions","initialCommentsList","commit","url","fetch","then","resp","json","data"],"sources":["E:/Vue/career_guidance/src/store/modules/comments.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst comments = {\r\n    state: {\r\n        comments: [\r\n            {\r\n                user: \"username\",\r\n                date: \"01-04-2023\",\r\n                stars: \"4\",\r\n                comment: \"Хороший тест!\",\r\n                usersIdLikes: [1, 2],\r\n                usersIdDislikes: [3],\r\n                liked: false,\r\n                disliked: false,\r\n                openedInput: false,\r\n                inputValue: \"\",\r\n                answered: [{\r\n                    user: \"username\",\r\n                    date: \"02-04-2023\",\r\n                    comment: \"Ответ на Хороший тест!\",\r\n                    usersIdLikes: [1, 2],\r\n                    usersIdDislikes: [],\r\n                    liked: false,\r\n                    disliked: false,\r\n                    answered: []\r\n                }]\r\n            },\r\n            {\r\n                user: \"some user\",\r\n                date: \"12-03-2023\",\r\n                stars: \"5\",\r\n                comment: \"Отличный тест!\",\r\n                usersIdLikes: [1, 2],\r\n                usersIdDislikes: [],\r\n                liked: false,\r\n                disliked: false,\r\n                openedInput: false,\r\n                inputValue: \"\",\r\n                answered: []\r\n            }\r\n        ]\r\n    },\r\n    getters: {\r\n        getComments(state) {\r\n            return state.comments\r\n        }\r\n    },\r\n    mutations: {\r\n        setComments(state, value) {\r\n            state.comments = value\r\n        }\r\n    },\r\n    actions: {\r\n        async initialCommentsList({commit}) {\r\n            const url = 'https://prof-choose-default-rtdb.firebaseio.com/comments'\r\n            const comments = await fetch(url)\r\n                .then(resp => resp.json()\r\n                    .then(data => commit(\"setComments\", data.data)))\r\n\r\n\r\n        }\r\n    },\r\n}\r\n\r\nexport default comments\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG;EACbC,KAAK,EAAE;IACHD,QAAQ,EAAE,CACN;MACIE,IAAI,EAAE,UAAU;MAChBC,IAAI,EAAE,YAAY;MAClBC,KAAK,EAAE,GAAG;MACVC,OAAO,EAAE,eAAe;MACxBC,YAAY,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;MACpBC,eAAe,EAAE,CAAC,CAAC,CAAC;MACpBC,KAAK,EAAE,KAAK;MACZC,QAAQ,EAAE,KAAK;MACfC,WAAW,EAAE,KAAK;MAClBC,UAAU,EAAE,EAAE;MACdC,QAAQ,EAAE,CAAC;QACPV,IAAI,EAAE,UAAU;QAChBC,IAAI,EAAE,YAAY;QAClBE,OAAO,EAAE,wBAAwB;QACjCC,YAAY,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;QACpBC,eAAe,EAAE,EAAE;QACnBC,KAAK,EAAE,KAAK;QACZC,QAAQ,EAAE,KAAK;QACfG,QAAQ,EAAE;MACd,CAAC;IACL,CAAC,EACD;MACIV,IAAI,EAAE,WAAW;MACjBC,IAAI,EAAE,YAAY;MAClBC,KAAK,EAAE,GAAG;MACVC,OAAO,EAAE,gBAAgB;MACzBC,YAAY,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;MACpBC,eAAe,EAAE,EAAE;MACnBC,KAAK,EAAE,KAAK;MACZC,QAAQ,EAAE,KAAK;MACfC,WAAW,EAAE,KAAK;MAClBC,UAAU,EAAE,EAAE;MACdC,QAAQ,EAAE;IACd,CAAC;EAET,CAAC;EACDC,OAAO,EAAE;IACLC,WAAWA,CAACb,KAAK,EAAE;MACf,OAAOA,KAAK,CAACD,QAAQ;IACzB;EACJ,CAAC;EACDe,SAAS,EAAE;IACPC,WAAWA,CAACf,KAAK,EAAEgB,KAAK,EAAE;MACtBhB,KAAK,CAACD,QAAQ,GAAGiB,KAAK;IAC1B;EACJ,CAAC;EACDC,OAAO,EAAE;IACL,MAAMC,mBAAmBA,CAAC;MAACC;IAAM,CAAC,EAAE;MAChC,MAAMC,GAAG,GAAG,0DAA0D;MACtE,MAAMrB,QAAQ,GAAG,MAAMsB,KAAK,CAACD,GAAG,CAAC,CAC5BE,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,EAAE,CACpBF,IAAI,CAACG,IAAI,IAAIN,MAAM,CAAC,aAAa,EAAEM,IAAI,CAACA,IAAI,CAAC,CAAC,CAAC;IAG5D;EACJ;AACJ,CAAC;AAED,eAAe1B,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}