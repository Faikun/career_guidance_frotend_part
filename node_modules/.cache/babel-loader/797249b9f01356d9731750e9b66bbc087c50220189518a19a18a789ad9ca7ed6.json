{"ast":null,"code":"import { createStore } from 'vuex';\nimport { ref } from \"vue\";\nexport default createStore({\n  state: {\n    isAuth: false,\n    userId: null,\n    // TODO: Сделать так, чтобы сюда писался юзер айди для того, чтобы найти авторизованного пользователя из массива. Хочу использовать при написании комментария, от чьего имени писать :) Время 2 часа ночи 10 Марта, усталлл....\n    openedAuth: false,\n    users: [{\n      userId: 1,\n      name: 'user',\n      mail: 'mail@gmail.com',\n      password: 'qwerty'\n    }, {\n      userId: 2,\n      name: 'guest',\n      mail: 'guest@gmail.com',\n      password: 'guestPass'\n    }],\n    notification: ref({\n      title: '',\n      text: '',\n      mode: '',\n      openedNotification: false\n    })\n  },\n  getters: {\n    getAuth(state) {\n      return state.isAuth;\n    },\n    getOpenedAuth(state) {\n      return state.openedAuth;\n    },\n    getUsers(state) {\n      return state.users;\n    },\n    getUserId(state) {\n      return state.userId;\n    },\n    getNotificationInfo(state) {\n      return state.notification;\n    }\n  },\n  mutations: {\n    toggleOpenedAuth(state) {\n      state.openedAuth = !state.openedAuth;\n    },\n    setAuth(state) {\n      state.isAuth = !state.isAuth;\n    },\n    setUserId(state, value) {\n      state.userId = value;\n    },\n    setNotificationBool(state) {\n      state.notification.openedNotification = false;\n    },\n    setNotificationInfo(state, payload) {\n      state.notification.title = payload.titleValue;\n      state.notification.text = payload.text;\n      state.notification.mode = payload.mode;\n      state.notification.openedNotification = true;\n    }\n  },\n  actions: {},\n  modules: {}\n});","map":{"version":3,"names":["createStore","ref","state","isAuth","userId","openedAuth","users","name","mail","password","notification","title","text","mode","openedNotification","getters","getAuth","getOpenedAuth","getUsers","getUserId","getNotificationInfo","mutations","toggleOpenedAuth","setAuth","setUserId","value","setNotificationBool","setNotificationInfo","payload","titleValue","actions","modules"],"sources":["E:/Vue/career_guidance/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\nimport {ref} from \"vue\";\n\nexport default createStore({\n  state: {\n    isAuth: false,\n    userId: null, // TODO: Сделать так, чтобы сюда писался юзер айди для того, чтобы найти авторизованного пользователя из массива. Хочу использовать при написании комментария, от чьего имени писать :) Время 2 часа ночи 10 Марта, усталлл....\n    openedAuth: false,\n    users: [\n      {\n        userId: 1,\n        name: 'user',\n        mail: 'mail@gmail.com',\n        password: 'qwerty'\n      },\n      {\n        userId: 2,\n        name: 'guest',\n        mail: 'guest@gmail.com',\n        password: 'guestPass'\n      }\n    ],\n    notification: ref({\n      title: '',\n      text: '',\n      mode: '',\n      openedNotification: false\n    }),\n  },\n  getters: {\n    getAuth(state) {\n      return state.isAuth\n    },\n    getOpenedAuth(state) {\n      return state.openedAuth\n    },\n    getUsers(state) {\n      return state.users\n    },\n    getUserId(state) {\n      return state.userId\n    },\n    getNotificationInfo(state) {\n      return state.notification\n    }\n  },\n  mutations: {\n    toggleOpenedAuth(state) {\n      state.openedAuth = !state.openedAuth;\n    },\n    setAuth(state) {\n      state.isAuth = !state.isAuth\n    },\n    setUserId(state, value) {\n      state.userId = value\n    },\n    setNotificationBool(state) {\n      state.notification.openedNotification = false;\n    },\n    setNotificationInfo(state, payload) {\n      state.notification.title = payload.titleValue;\n      state.notification.text = payload.text;\n      state.notification.mode = payload.mode;\n      state.notification.openedNotification = true;\n    }\n  },\n  actions: {\n  },\n  modules: {\n  }\n})\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC,SAAQC,GAAG,QAAO,KAAK;AAEvB,eAAeD,WAAW,CAAC;EACzBE,KAAK,EAAE;IACLC,MAAM,EAAE,KAAK;IACbC,MAAM,EAAE,IAAI;IAAE;IACdC,UAAU,EAAE,KAAK;IACjBC,KAAK,EAAE,CACL;MACEF,MAAM,EAAE,CAAC;MACTG,IAAI,EAAE,MAAM;MACZC,IAAI,EAAE,gBAAgB;MACtBC,QAAQ,EAAE;IACZ,CAAC,EACD;MACEL,MAAM,EAAE,CAAC;MACTG,IAAI,EAAE,OAAO;MACbC,IAAI,EAAE,iBAAiB;MACvBC,QAAQ,EAAE;IACZ,CAAC,CACF;IACDC,YAAY,EAAET,GAAG,CAAC;MAChBU,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE,EAAE;MACRC,IAAI,EAAE,EAAE;MACRC,kBAAkB,EAAE;IACtB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,OAAOA,CAACd,KAAK,EAAE;MACb,OAAOA,KAAK,CAACC,MAAM;IACrB,CAAC;IACDc,aAAaA,CAACf,KAAK,EAAE;MACnB,OAAOA,KAAK,CAACG,UAAU;IACzB,CAAC;IACDa,QAAQA,CAAChB,KAAK,EAAE;MACd,OAAOA,KAAK,CAACI,KAAK;IACpB,CAAC;IACDa,SAASA,CAACjB,KAAK,EAAE;MACf,OAAOA,KAAK,CAACE,MAAM;IACrB,CAAC;IACDgB,mBAAmBA,CAAClB,KAAK,EAAE;MACzB,OAAOA,KAAK,CAACQ,YAAY;IAC3B;EACF,CAAC;EACDW,SAAS,EAAE;IACTC,gBAAgBA,CAACpB,KAAK,EAAE;MACtBA,KAAK,CAACG,UAAU,GAAG,CAACH,KAAK,CAACG,UAAU;IACtC,CAAC;IACDkB,OAAOA,CAACrB,KAAK,EAAE;MACbA,KAAK,CAACC,MAAM,GAAG,CAACD,KAAK,CAACC,MAAM;IAC9B,CAAC;IACDqB,SAASA,CAACtB,KAAK,EAAEuB,KAAK,EAAE;MACtBvB,KAAK,CAACE,MAAM,GAAGqB,KAAK;IACtB,CAAC;IACDC,mBAAmBA,CAACxB,KAAK,EAAE;MACzBA,KAAK,CAACQ,YAAY,CAACI,kBAAkB,GAAG,KAAK;IAC/C,CAAC;IACDa,mBAAmBA,CAACzB,KAAK,EAAE0B,OAAO,EAAE;MAClC1B,KAAK,CAACQ,YAAY,CAACC,KAAK,GAAGiB,OAAO,CAACC,UAAU;MAC7C3B,KAAK,CAACQ,YAAY,CAACE,IAAI,GAAGgB,OAAO,CAAChB,IAAI;MACtCV,KAAK,CAACQ,YAAY,CAACG,IAAI,GAAGe,OAAO,CAACf,IAAI;MACtCX,KAAK,CAACQ,YAAY,CAACI,kBAAkB,GAAG,IAAI;IAC9C;EACF,CAAC;EACDgB,OAAO,EAAE,CACT,CAAC;EACDC,OAAO,EAAE,CACT;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}