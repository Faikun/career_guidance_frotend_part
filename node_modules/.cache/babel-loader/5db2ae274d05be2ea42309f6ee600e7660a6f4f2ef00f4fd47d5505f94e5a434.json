{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"professions__wrapper\"\n};\nconst _hoisted_2 = [\"src\"];\nconst _hoisted_3 = {\n  class: \"tests__name\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.filteredArray, prof => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"test__block\",\n      key: prof.name\n    }, [_createElementVNode(\"img\", {\n      class: \"test__block-img\",\n      src: prof.categoryImage,\n      alt: \"image\"\n    }, null, 8 /* PROPS */, _hoisted_2), _createElementVNode(\"span\", _hoisted_3, _toDisplayString(prof.category), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" ./professions__wrapper \")], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","_hoisted_1","_createElementBlock","_Fragment","_renderList","$setup","filteredArray","prof","key","name","src","categoryImage","alt","_hoisted_3","_toDisplayString","category","_createCommentVNode"],"sources":["E:\\Vue\\career_guidance\\src\\components\\SearchProfession.vue"],"sourcesContent":["<template>\r\n  <div class=\"professions__wrapper\">\r\n    <div class=\"test__block\" v-for=\"prof in filteredArray\" :key=\"prof.name\">\r\n      <img class=\"test__block-img\" :src=\"prof.categoryImage\" alt=\"image\">\r\n      <span class=\"tests__name\">{{ prof.category }}</span>\r\n    </div>\r\n  </div><!-- ./professions__wrapper -->\r\n</template>\r\n\r\n<script>\r\nimport {useStore} from \"vuex\";\r\nimport {computed} from \"vue\";\r\n\r\nexport default {\r\n  name: \"SearchProfession\",\r\n  props: ['requestText'],\r\n  setup(props) {\r\n    const store = useStore();\r\n    const profArray = computed(() => store.getters.getProfessionsArray);\r\n    const filteredArray = function () {\r\n      profArray.value.filter((el) => el.category.includes(props.requestText))\r\n    }\r\n    return {\r\n      filteredArray\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAsB;;;EAGvBA,KAAK,EAAC;AAAa;;6DAH7BC,mBAAA,CAKM,OALNC,UAKM,I,kBAJJC,mBAAA,CAGMC,SAAA,QAAAC,WAAA,CAHkCC,MAAA,CAAAC,aAAa,EAArBC,IAAI;yBAApCL,mBAAA,CAGM;MAHDH,KAAK,EAAC,aAAa;MAAgCS,GAAG,EAAED,IAAI,CAACE;QAChET,mBAAA,CAAmE;MAA9DD,KAAK,EAAC,iBAAiB;MAAEW,GAAG,EAAEH,IAAI,CAACI,aAAa;MAAEC,GAAG,EAAC;yCAC3DZ,mBAAA,CAAoD,QAApDa,UAAoD,EAAAC,gBAAA,CAAvBP,IAAI,CAACQ,QAAQ,iB;oCAExCC,mBAAA,4BAA+B,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}