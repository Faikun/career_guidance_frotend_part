{"ast":null,"code":"import \"core-js/modules/web.dom-exception.stack.js\";\nimport { computed, ref } from \"vue\";\nimport store from \"@/store\";\nimport axios from \"axios\";\nexport default {\n  name: \"Login\",\n  async setup() {\n    let isLogin = ref(true);\n    await store.dispatch(\"setAllUsers\");\n    function parseJWT(token) {\n      let base64Url = token.split('.')[1];\n      let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n      let jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n      }).join(''));\n      return JSON.parse(jsonPayload);\n    }\n    let token = localStorage.getItem('jwt_token');\n    if (token) {\n      const userData = parseJWT(token);\n      const user = computed(() => store.getters.getUsers.filter(el => el.username === userData.sub));\n      console.log(user.value[0].password);\n      if (userData.auth === 'ROLE_ADMIN') store.commit('setAdmin');\n      store.commit('setAuth');\n      store.commit('setUserId', store.getters.getUsers.filter(el => el.username === user.value[0].username).map(map => map.id).toString());\n    }\n    const passwordImage = ref(null);\n    const passwordRef = ref(null);\n    const passwordImage_2 = ref(null);\n    const passwordRef_2 = ref(null);\n    const mailRef = ref(null);\n    const selectLocationRef = ref(null);\n    const nameReg = ref(null);\n    const mailReg = ref(null);\n    let name = ref('');\n    let mail = ref('');\n    let password = ref('');\n    let repeatedPassword = ref('');\n    let selectLocation = ref('');\n    let closeAuthBlock = function () {\n      store.commit('toggleOpenedAuth');\n      document.body.style.overflow = \"auto\";\n    };\n    let passwordToggle = function (passRef, passImage) {\n      passRef.setAttribute('type', passRef.getAttribute('type') === 'password' ? 'text' : 'password');\n      passImage.setAttribute('src', passImage.getAttribute('src') === require('../images/png/eye_opened.png') ? require('../images/png/eye_closed.png') : require('../images/png/eye_opened.png'));\n    };\n    let auth = async () => {\n      let user = store.getters.getUsers.filter(el => el.username === name.value);\n      user ? user = user[0] : console.log('Такой пользователь не найден');\n      try {\n        const {\n          data\n        } = await axios.post('auth/login', {\n          username: name.value,\n          password: password.value\n        });\n        if (data) {\n          axios.defaults.headers.common['Authorization'] = `Bearer ${data.token}`;\n          localStorage.setItem('jwt_token', data.token);\n          if (user.role === 'ROLE_ADMIN') {\n            store.commit('setAdmin');\n          }\n          store.commit('setAuth');\n          store.commit('setUserId', store.getters.getUsers.filter(el => el.email === mail.value).map(map => map.id).toString());\n          closeAuthBlock();\n          store.commit('setNotificationInfo', {\n            titleValue: 'Успех',\n            text: 'Авторизация успешно пройдена',\n            mode: 'success'\n          });\n        } else {\n          mailRef.value.style.outline = '1px solid red';\n          passwordRef.value.style.outline = '1px solid red';\n        }\n      } catch (e) {\n        console.log('Ошибка: ', e.message);\n      }\n    };\n    function passwordEqualFunction() {\n      if (password.value !== repeatedPassword.value) {\n        passwordRef_2.value.style.outline = '1px solid red';\n        return false;\n      } else {\n        passwordRef_2.value.style.outline = '1px solid black';\n        return true;\n      }\n    }\n    let register = async function () {\n      if (passwordEqualFunction()) {\n        const {\n          data\n        } = await axios.post('auth/register', {\n          username: name.value,\n          email: mail.value,\n          password: password.value,\n          location: selectLocation.value\n        }).then(e => {\n          if (e.request.status !== 200) {\n            const error = e.response.data.error;\n            console.log(error);\n            error.includes(\"Username shouldn\\'t be empty\") || error.includes(\"Username must contain between 3 and 20 characters\") ? nameReg.value.style.outline = '1px solid red' : nameReg.value.style.outline = '1px solid black';\n            error.includes(\"Email address should not be empty\") || error.includes(\"Invalid email address\") ? mailReg.value.style.outline = '1px solid red' : mailReg.value.style.outline = '1px solid black';\n            error.includes(\"Password should not be empty\") || error.includes(\"Password must contain between 5 and 32 characters\") ? passwordRef.value.style.outline = '1px solid red' : passwordRef.value.style.outline = '1px solid black';\n            error.includes(\"Location should not be empty\") ? selectLocationRef.value.style.outline = '1px solid red' : selectLocationRef.value.style.outline = '1px solid black';\n          }\n        });\n        if (data) {\n          axios.defaults.headers.common['Authorization'] = `Bearer ${data.token}`;\n          localStorage.setItem('jwt_token', data.token);\n          store.commit('setAuth');\n          store.commit('setUserId', store.getters.getUsers.filter(el => el.email === mail.value).map(map => map.id).toString());\n          closeAuthBlock();\n          store.commit('setNotificationInfo', {\n            titleValue: 'Успех',\n            text: 'Регистрация успешно пройдена',\n            mode: 'success'\n          });\n        }\n      }\n    };\n    return {\n      name,\n      mail,\n      password,\n      repeatedPassword,\n      selectLocation,\n      passwordToggle,\n      passwordImage,\n      passwordRef,\n      passwordImage_2,\n      passwordRef_2,\n      selectLocationRef,\n      store,\n      closeAuthBlock,\n      isLogin,\n      auth,\n      register,\n      nameReg,\n      mailReg,\n      mailRef\n    };\n  }\n};","map":{"version":3,"names":["computed","ref","store","axios","name","setup","isLogin","dispatch","parseJWT","token","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","JSON","parse","localStorage","getItem","userData","user","getters","getUsers","filter","el","username","sub","console","log","value","password","auth","commit","id","passwordImage","passwordRef","passwordImage_2","passwordRef_2","mailRef","selectLocationRef","nameReg","mailReg","mail","repeatedPassword","selectLocation","closeAuthBlock","document","body","style","overflow","passwordToggle","passRef","passImage","setAttribute","getAttribute","require","data","post","defaults","headers","common","setItem","role","email","titleValue","text","mode","outline","e","message","passwordEqualFunction","register","location","then","request","status","error","response","includes"],"sources":["E:\\Vue\\career_guidance\\src\\components\\TheAuth.vue"],"sourcesContent":["<template>\r\n<div class=\"auth\" v-if=\"store.getters.getOpenedAuth\">\r\n  <div class=\"auth__mask\" @click=\"closeAuthBlock\"></div><!-- ./login__mask -->\r\n\r\n  <form v-if=\"isLogin\" class=\"auth__wrapper\" @submit.prevent=\"auth\">\r\n    <div class=\"auth__intro\">\r\n      <h1 class=\"auth__name\">Вход</h1>\r\n      <img class=\"auth__close\" src=\"../images/png/Close.png\" alt=\"close\" @click=\"closeAuthBlock\">\r\n    </div><!--./auth__intro -->\r\n    <div class=\"auth__inputs\">\r\n      <div class=\"auth__inputs-item\">\r\n        <input placeholder=\"Логин\" type=\"text\" v-model.trim=\"name\" ref=\"mailRef\">\r\n      </div><!-- ./auth__inputs-item -->\r\n      <div class=\"auth__inputs-item\">\r\n        <input placeholder=\"Пароль\" type=\"password\" v-model.trim=\"password\" ref=\"passwordRef\">\r\n        <img\r\n             @click=\"passwordToggle(passwordRef, passwordImage)\"\r\n             class=\"auth__inputs-itemEye\"\r\n             src=\"../images/png/eye_opened.png\"\r\n             alt=\"visible/invisible password\"\r\n             ref=\"passwordImage\"\r\n        >\r\n      </div><!-- ./auth__inputs-item -->\r\n    </div><!-- ./auth__inputs -->\r\n    <button type=\"submit\" class=\"btn blue auth__button\">Войти</button><!-- ./auth__button -->\r\n    <router-link to=\"/reset\" class=\"auth__forgot\" @click=\"store.commit('toggleOpenedAuth')\">Забыли пароль?</router-link>\r\n    <button class=\"auth__reg\" type=\"button\" @click=\"isLogin = false\">Быстрая регистрация</button>\r\n  </form><!-- ./auth__wrapper -->\r\n\r\n  <form v-else class=\"auth__wrapper\">\r\n    <div class=\"auth__intro\">\r\n      <h1 class=\"auth__name\">Регистрация</h1>\r\n      <img class=\"auth__close\" src=\"../images/png/Close.png\" alt=\"close\" @click=\"closeAuthBlock\">\r\n    </div><!--./auth__intro -->\r\n    <div class=\"auth__inputs\">\r\n      <div class=\"auth__inputs-item\">\r\n        <input placeholder=\"Логин\" type=\"text\" v-model.trim=\"name\" ref=\"nameReg\">\r\n      </div><!-- ./auth__inputs-item -->\r\n      <div class=\"auth__inputs-item\">\r\n        <input placeholder=\"Почта\" type=\"text\" v-model.trim=\"mail\" ref=\"mailReg\">\r\n      </div><!-- ./auth__inputs-item -->\r\n      <div class=\"auth__inputs-item\">\r\n        <input placeholder=\"Пароль\" type=\"password\" v-model.trim=\"password\" ref=\"passwordRef\">\r\n        <img\r\n            @click=\"passwordToggle(passwordRef, passwordImage)\"\r\n            class=\"auth__inputs-itemEye\"\r\n            src=\"../images/png/eye_opened.png\"\r\n            alt=\"visible/invisible password\"\r\n            ref=\"passwordImage\"\r\n        >\r\n      </div><!-- ./auth__inputs-item -->\r\n      <div class=\"auth__inputs-item\">\r\n        <input placeholder=\"Подтвердить пароль\" type=\"password\" v-model.trim=\"repeatedPassword\" ref=\"passwordRef_2\">\r\n        <img\r\n            @click=\"passwordToggle(passwordRef_2, passwordImage_2)\"\r\n            class=\"auth__inputs-itemEye\"\r\n            src=\"../images/png/eye_opened.png\"\r\n            alt=\"visible/invisible password\"\r\n            ref=\"passwordImage_2\"\r\n        >\r\n      </div><!-- ./auth__inputs-item -->\r\n      <div class=\"auth__inputs-item\">\r\n        <select name=\"\" id=\"\" v-model=\"selectLocation\" ref=\"selectLocationRef\">\r\n          <option value>Выберите город</option>\r\n          <option selected value=\"Алматы\">Алматы</option>\r\n          <option value=\"Нур-Султан\">Нур-Султан</option>\r\n          <option value=\"Шымкент\">Шымкент</option>\r\n          <option value=\"Туркестан\">Туркестан</option>\r\n        </select>\r\n      </div>\r\n\r\n    </div><!-- ./auth__inputs -->\r\n    <button type=\"submit\" class=\"auth__button btn blue\" @click.prevent=\"register\">Регистрация</button><!-- ./auth__button -->\r\n    <a @click=\"isLogin = true\" class=\"auth__forgot\" href=\"#\">Назад</a>\r\n  </form><!-- ./auth__wrapper -->\r\n\r\n</div><!-- ./auth -->\r\n</template>\r\n\r\n<script>\r\nimport {computed, ref} from \"vue\";\r\nimport store from \"@/store\";\r\nimport axios from \"axios\";\r\nexport default {\r\n  name: \"Login\",\r\n  async setup () {\r\n    let isLogin = ref(true)\r\n    await store.dispatch(\"setAllUsers\");\r\n\r\n    function parseJWT(token) {\r\n      let base64Url = token.split('.')[1];\r\n      let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n      let jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\r\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n      }).join(''));\r\n      return JSON.parse(jsonPayload);\r\n    }\r\n\r\n    let token = localStorage.getItem('jwt_token')\r\n    if(token) {\r\n      const userData = parseJWT(token)\r\n      const user = computed(() => store.getters.getUsers.filter((el) => el.username === userData.sub))\r\n      console.log(user.value[0].password)\r\n\r\n      if(userData.auth === 'ROLE_ADMIN')\r\n        store.commit('setAdmin');\r\n\r\n      store.commit('setAuth');\r\n      store.commit('setUserId', store.getters.getUsers.filter((el) => el.username === user.value[0].username).map(map => map.id).toString());\r\n    }\r\n\r\n    const passwordImage = ref(null)\r\n    const passwordRef = ref(null)\r\n    const passwordImage_2 = ref(null)\r\n    const passwordRef_2 = ref(null)\r\n    const mailRef = ref(null)\r\n    const selectLocationRef = ref(null)\r\n\r\n    const nameReg = ref(null);\r\n    const mailReg = ref(null);\r\n\r\n    let name = ref('');\r\n    let mail = ref('');\r\n    let password = ref('');\r\n    let repeatedPassword = ref('');\r\n    let selectLocation = ref('')\r\n\r\n    let closeAuthBlock = function () {\r\n      store.commit('toggleOpenedAuth');\r\n      document.body.style.overflow = \"auto\";\r\n    }\r\n\r\n    let passwordToggle = function (passRef, passImage) {\r\n      passRef.setAttribute('type',\r\n          passRef.getAttribute('type') === 'password' ? 'text' : 'password');\r\n      passImage.setAttribute('src',\r\n          passImage.getAttribute('src') === require('../images/png/eye_opened.png') ?\r\n              require('../images/png/eye_closed.png') : require('../images/png/eye_opened.png'));\r\n    }\r\n\r\n    let auth = async () => {\r\n      let user = store.getters.getUsers.filter((el) => el.username === name.value);\r\n      user ? user = user[0] : console.log('Такой пользователь не найден')\r\n\r\n      try {\r\n        const {data} = await axios\r\n            .post('auth/login', {\r\n              username: name.value,\r\n              password: password.value\r\n            })\r\n\r\n        if (data) {\r\n          axios.defaults.headers.common['Authorization'] = `Bearer ${data.token}`\r\n          localStorage.setItem('jwt_token', data.token);\r\n\r\n          if(user.role === 'ROLE_ADMIN') {\r\n            store.commit('setAdmin');\r\n          }\r\n          store.commit('setAuth');\r\n          store.commit('setUserId', store.getters.getUsers.filter((el) => el.email === mail.value).map(map => map.id).toString());\r\n          closeAuthBlock();\r\n          store.commit('setNotificationInfo', { titleValue: 'Успех', text: 'Авторизация успешно пройдена', mode: 'success'} )\r\n        }\r\n        else {\r\n          mailRef.value.style.outline = '1px solid red';\r\n          passwordRef.value.style.outline = '1px solid red';\r\n        }\r\n      }\r\n      catch (e) {\r\n        console.log('Ошибка: ', e.message)\r\n      }\r\n    }\r\n\r\n    function passwordEqualFunction() {\r\n      if (password.value !== repeatedPassword.value) {\r\n        passwordRef_2.value.style.outline = '1px solid red';\r\n        return false\r\n      } else {\r\n        passwordRef_2.value.style.outline = '1px solid black';\r\n        return true\r\n      }\r\n    }\r\n\r\n    let register = async function () {\r\n      if (passwordEqualFunction()) {\r\n\r\n        const {data} = await axios.post('auth/register', {\r\n          username: name.value,\r\n          email: mail.value,\r\n          password: password.value,\r\n          location: selectLocation.value\r\n        }).then(e => {\r\n          if(e.request.status !== 200) {\r\n            const error = e.response.data.error\r\n            console.log(error)\r\n            error.includes(\"Username shouldn\\'t be empty\") || error.includes(\"Username must contain between 3 and 20 characters\") ? nameReg.value.style.outline = '1px solid red' : nameReg.value.style.outline = '1px solid black';\r\n            error.includes(\"Email address should not be empty\") || error.includes(\"Invalid email address\") ? mailReg.value.style.outline = '1px solid red' : mailReg.value.style.outline = '1px solid black';\r\n            error.includes(\"Password should not be empty\") || error.includes(\"Password must contain between 5 and 32 characters\") ? passwordRef.value.style.outline = '1px solid red' : passwordRef.value.style.outline = '1px solid black';\r\n            error.includes(\"Location should not be empty\") ? selectLocationRef.value.style.outline = '1px solid red' : selectLocationRef.value.style.outline = '1px solid black';\r\n          }\r\n        })\r\n\r\n        if (data) {\r\n          axios.defaults.headers.common['Authorization'] = `Bearer ${data.token}`\r\n          localStorage.setItem('jwt_token', data.token);\r\n          store.commit('setAuth');\r\n          store.commit('setUserId', store.getters.getUsers.filter((el) => el.email === mail.value).map(map => map.id).toString());\r\n          closeAuthBlock();\r\n          store.commit('setNotificationInfo', { titleValue: 'Успех', text: 'Регистрация успешно пройдена', mode: 'success'} )\r\n        }\r\n      }\r\n    }\r\n\r\n    return {\r\n      name, mail, password, repeatedPassword, selectLocation,\r\n      passwordToggle,\r\n      passwordImage, passwordRef, passwordImage_2, passwordRef_2, selectLocationRef,\r\n      store,\r\n      closeAuthBlock,\r\n      isLogin,\r\n      auth, register,\r\n      nameReg, mailReg, mailRef\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}