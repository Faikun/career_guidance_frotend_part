{"ast":null,"code":"import { useStore } from \"vuex\";\nexport default {\n  name: \"History\",\n  setup() {\n    let store = useStore();\n    let users = store.getters.getUsers;\n    let userId = store.getters.getUserId;\n    let authedUser = users.filter(el => el.userId === parseInt(userId));\n    return {\n      history: authedUser[0].history\n    };\n  }\n};","map":{"version":3,"names":["useStore","name","setup","store","users","getters","getUsers","userId","getUserId","authedUser","filter","el","parseInt","history"],"sources":["E:\\Vue\\career_guidance\\src\\views\\History.vue"],"sourcesContent":["<template>\r\n<div class=\"history\">\r\n  <h1 class=\"history__title\">История</h1>\r\n  <div class=\"history__wrapper\">\r\n    <div v-if=\"history.length === 0\" class=\"history__empty\">\r\n      <span class=\"history__empty-text mb20\">К сожалению, вы пока не прошли ни одно из предложенных тестов.</span>\r\n      <div class=\"history__empty-wrapper\">\r\n        <span class=\"history__empty-text\">Желате пройти тестирование?</span>\r\n        <router-link class=\"history__empty-link\" to=\"/tests\">Список тестов</router-link>\r\n      </div>\r\n    </div><!-- ./history__empty -->\r\n  </div><!-- ./history__wrapper -->\r\n</div><!-- ./history -->\r\n</template>\r\n\r\n<script>\r\nimport {useStore} from \"vuex\";\r\n\r\nexport default {\r\n  name: \"History\",\r\n  setup() {\r\n    let store = useStore();\r\n    let users = store.getters.getUsers;\r\n    let userId = store.getters.getUserId;\r\n    let authedUser = users.filter((el) => el.userId === parseInt(userId));\r\n    return {\r\n      history: authedUser[0].history\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n"],"mappings":"AAgBA,SAAQA,QAAQ,QAAO,MAAM;AAE7B,eAAe;EACbC,IAAI,EAAE,SAAS;EACfC,KAAKA,CAAA,EAAG;IACN,IAAIC,KAAI,GAAIH,QAAQ,EAAE;IACtB,IAAII,KAAI,GAAID,KAAK,CAACE,OAAO,CAACC,QAAQ;IAClC,IAAIC,MAAK,GAAIJ,KAAK,CAACE,OAAO,CAACG,SAAS;IACpC,IAAIC,UAAS,GAAIL,KAAK,CAACM,MAAM,CAAEC,EAAE,IAAKA,EAAE,CAACJ,MAAK,KAAMK,QAAQ,CAACL,MAAM,CAAC,CAAC;IACrE,OAAO;MACLM,OAAO,EAAEJ,UAAU,CAAC,CAAC,CAAC,CAACI;IACzB;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}