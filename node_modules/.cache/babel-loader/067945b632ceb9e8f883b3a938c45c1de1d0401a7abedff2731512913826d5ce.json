{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { computed, ref } from \"vue\";\nimport store from \"@/store\";\nexport default {\n  name: \"Comments\",\n  setup() {\n    const today = new Date();\n    const yyyy = today.getFullYear();\n    let mm = today.getMonth() + 1;\n    let dd = today.getDate();\n    if (dd < 10) dd = '0' + dd;\n    if (mm < 10) mm = '0' + mm;\n    const formattedToday = dd + '-' + mm + '-' + yyyy;\n    let starsCount = ref(0);\n    let inputComment = ref('');\n    let starSave = function (star) {\n      starsCount.value = star;\n    };\n    let putLikeDis = function (comment, mainInter, oppositeInter, main, reverse, userId) {\n      if (store.getters.getAuth) {\n        if (mainInter.indexOf(userId) == -1 && oppositeInter.indexOf(userId) == -1) {\n          mainInter.push(userId);\n          comment[main.replace(/'/g)] = true;\n        } else if (mainInter.indexOf(userId) == -1 && oppositeInter.indexOf(userId) != -1) {\n          mainInter.push(userId);\n          oppositeInter.splice(oppositeInter.findIndex(id => id === userId), 1);\n          comment[main.replace(/'/g)] = true;\n          comment[reverse.replace(/'/g)] = false;\n        } else if (mainInter.indexOf(userId) != -1 && oppositeInter.indexOf(userId) == -1) {\n          mainInter.splice(mainInter.findIndex(id => id === userId), 1);\n          comment[main.replace(/'/g)] = false;\n        }\n      } else {\n        store.commit('toggleOpenedAuth');\n        document.body.style.overflow = \"hidden\";\n        document.documentElement.scrollTop = 0;\n      }\n    };\n    let leaveAComment = function () {\n      if (store.getters.getAuth) {\n        console.log('inputComment', inputComment.value);\n        console.log('starsCount', starsCount.value);\n        if (inputComment.value !== '' && starsCount.value !== 0) {\n          let userName = store.getters.getUsers.filter(el => el.userId === parseInt(store.getters.getUserId)).map(map => map.name).toString();\n          comments.value.push({\n            user: userName,\n            date: formattedToday,\n            stars: starsCount.value,\n            comment: inputComment.value,\n            usersIdLikes: [],\n            usersIdDislikes: []\n          });\n          inputComment.value = '';\n        } else {\n          alert('Пожалуйста, напишите комментарий и оцените тест по 5-и бальной шкале');\n        }\n      } else {\n        store.commit('toggleOpenedAuth');\n        document.body.style.overflow = \"hidden\";\n        document.documentElement.scrollTop = 0;\n      }\n    };\n    let openInput = comment => comment.openedInput = !comment.openedInput;\n    let answerComment = function (comment) {\n      if (store.getters.getAuth) {\n        if (comment.inputValue.trim() !== '') {\n          let userName = store.getters.getUsers.filter(el => el.userId === parseInt(store.getters.getUserId)).map(map => map.name).toString();\n          comment.answered.push({\n            user: userName,\n            date: formattedToday,\n            comment: comment.inputValue,\n            usersIdLikes: [],\n            usersIdDislikes: []\n          });\n          comment.inputValue = '';\n          comment.openedInput = false;\n        } else {\n          alert('Пожалуйста, напишите ответ на комментарий');\n        }\n      } else {\n        store.commit('toggleOpenedAuth');\n        document.body.style.overflow = \"hidden\";\n        document.documentElement.scrollTop = 0;\n      }\n    };\n    let comments = computed(() => store.getters.getComments);\n    console.log(comments.value);\n    return {\n      comments,\n      putLikeDis,\n      starSave,\n      leaveAComment,\n      inputComment,\n      answerComment,\n      openInput,\n      store\n    };\n  }\n};","map":{"version":3,"names":["computed","ref","store","name","setup","today","Date","yyyy","getFullYear","mm","getMonth","dd","getDate","formattedToday","starsCount","inputComment","starSave","star","value","putLikeDis","comment","mainInter","oppositeInter","main","reverse","userId","getters","getAuth","indexOf","push","replace","splice","findIndex","id","commit","document","body","style","overflow","documentElement","scrollTop","leaveAComment","console","log","userName","getUsers","filter","el","parseInt","getUserId","map","toString","comments","user","date","stars","usersIdLikes","usersIdDislikes","alert","openInput","openedInput","answerComment","inputValue","trim","answered","getComments"],"sources":["E:\\Vue\\career_guidance\\src\\components\\Comments.vue"],"sourcesContent":["<template>\r\n<div class=\"comments\">\r\n  <h2 class=\"comments__title\">Поделитесь со своми впечатлениями ({{ comments.length }})</h2>\r\n  <div class=\"comments__leaveAComment\">\r\n    <span class=\"comments__stars\">\r\n      <input type=\"radio\" name=\"rating\" value=\"5\" id=\"5\" @click=\"starSave($event.target.value)\"><label for=\"5\">☆</label>\r\n      <input type=\"radio\" name=\"rating\" value=\"4\" id=\"4\" @click=\"starSave($event.target.value)\"><label for=\"4\">☆</label>\r\n      <input type=\"radio\" name=\"rating\" value=\"3\" id=\"3\" @click=\"starSave($event.target.value)\"><label for=\"3\">☆</label>\r\n      <input type=\"radio\" name=\"rating\" value=\"2\" id=\"2\" @click=\"starSave($event.target.value)\"><label for=\"2\">☆</label>\r\n      <input type=\"radio\" name=\"rating\" value=\"1\" id=\"1\" @click=\"starSave($event.target.value)\"><label for=\"1\">☆</label>\r\n    </span>\r\n    <div class=\"comments__input\">\r\n      <input\r\n          class=\"comments__input-input\"\r\n          type=\"text\"\r\n          placeholder=\"Напишите комментарий\"\r\n          v-on:keyup.enter=\"leaveAComment\"\r\n          v-model.trim.lazy=\"inputComment\"\r\n      >\r\n      <img\r\n          class=\"comments__input-img\"\r\n          src=\"../images/png/ArrowToRightBlue.png\"\r\n          alt=\"arrow\"\r\n          @click=\"leaveAComment\"\r\n      >\r\n    </div>\r\n  </div><!-- ./comments__leaveAComment -->\r\n  <div class=\"comments__list\">\r\n    <div class=\"comments__item\" v-for=\"comment in comments.slice().reverse()\" :key=\"comment.date\">\r\n      <div class=\"comments__user\">\r\n        <div class=\"comments__user-name\">{{ comment.user }}</div>\r\n        <div class=\"comments__user-date\">{{ comment.date }}</div>\r\n        <div class=\"comments__user-stars\">\r\n          <img src=\"../images/png/Star-black.png\" alt=\"star\" v-for=\"item in comment.stars\">\r\n        </div>\r\n      </div><!-- ./comments__user -->\r\n      <div class=\"comments__item-text\">{{ comment.comment }}</div>\r\n      <div class=\"comments__item-interaction\">\r\n        <div class=\"comments__item-answer\" @click=\"openInput(comment)\">Ответить</div>\r\n        <div class=\"comments__item-response\">\r\n          <div class=\"comments__item-likes\">\r\n            <img\r\n                @click=\"putLikeDis(comment, comment.usersIdLikes, comment.usersIdDislikes, 'liked', 'disliked', 3)\"\r\n                class=\"comments__item-interactionImage\"\r\n                :class=\"comment.liked ? 'active' : ''\"\r\n                src=\"../images/png/mdi_like.png\"\r\n                alt=\"likes\">\r\n            <span>{{ comment.usersIdLikes.length }}</span>\r\n          </div>\r\n          <div class=\"comments__item-dislikes\">\r\n            <img\r\n                @click=\"putLikeDis(comment, comment.usersIdDislikes, comment.usersIdLikes, 'disliked', 'liked', 3)\"\r\n                class=\"comments__item-interactionImage\"\r\n                :class=\"comment.disliked ? 'active' : ''\"\r\n                src=\"../images/png/mdi_dislike.png\"\r\n                alt=\"dislike\">\r\n            <span>{{ comment.usersIdDislikes.length }}</span>\r\n          </div><!-- ./comments__item-dislikes -->\r\n        </div><!-- ./comments__item-response -->\r\n      </div><!-- ./comments__item-interaction -->\r\n\r\n      <div class=\"comments__answer\" v-if=\"comment.openedInput\">\r\n        <input type=\"text\" v-model.trim=\"comment.inputValue\">\r\n        <button type=\"button\" @click=\"answerComment(comment)\">Ответить</button>\r\n      </div>\r\n\r\n      <div class=\"comments__response\" v-for=\"answered in comment.answered.slice().reverse()\" :key=\"answered.name_ru\">\r\n        <div class=\"comments__user\">\r\n          <div class=\"comments__user-name\">{{ answered.user }}</div>\r\n          <div class=\"comments__user-date\">{{ answered.date }}</div>\r\n        </div><!-- ./comments__user -->\r\n        <div class=\"comments__item-text\">{{ answered.comment }}</div>\r\n        <div class=\"comments__item-interaction\">\r\n          <div class=\"comments__item-response\">\r\n            <div class=\"comments__item-likes\">\r\n              <img\r\n                  @click=\"putLikeDis(answered, answered.usersIdLikes, answered.usersIdDislikes, 'liked', 'disliked', 3)\"\r\n                  class=\"comments__item-interactionImage\"\r\n                  :class=\"answered.liked ? 'active' : ''\"\r\n                  src=\"../images/png/mdi_like.png\"\r\n                  alt=\"likes\">\r\n              <span>{{ answered.usersIdLikes.length }}</span>\r\n            </div>\r\n            <div class=\"comments__item-dislikes\">\r\n              <img\r\n                  @click=\"putLikeDis(answered, answered.usersIdDislikes, answered.usersIdLikes, 'disliked', 'liked', 3)\"\r\n                  class=\"comments__item-interactionImage\"\r\n                  :class=\"answered.disliked ? 'active' : ''\"\r\n                  src=\"../images/png/mdi_dislike.png\"\r\n                  alt=\"dislike\">\r\n              <span>{{ answered.usersIdDislikes.length }}</span>\r\n            </div><!-- ./comments__item-dislikes -->\r\n          </div><!-- ./comments__item-response -->\r\n        </div><!-- ./comments__item-interaction -->\r\n      </div><!--./comments__response -->\r\n\r\n    </div><!-- ./comments__item -->\r\n  </div><!-- ./comments__list -->\r\n</div><!-- ./comments -->\r\n</template>\r\n\r\n<script>\r\nimport {computed, ref} from \"vue\";\r\nimport store from \"@/store\";\r\n\r\nexport default {\r\n  name: \"Comments\",\r\n  setup () {\r\n    const today = new Date();\r\n    const yyyy = today.getFullYear();\r\n    let mm = today.getMonth() + 1;\r\n    let dd = today.getDate();\r\n    if (dd < 10) dd = '0' + dd;\r\n    if (mm < 10) mm = '0' + mm;\r\n    const formattedToday = dd + '-' + mm + '-' + yyyy;\r\n\r\n    let starsCount = ref(0);\r\n    let inputComment = ref('');\r\n\r\n    let starSave = function (star) {\r\n      starsCount.value = star;\r\n    }\r\n\r\n    let putLikeDis = function (comment, mainInter, oppositeInter, main, reverse, userId) {\r\n      if (store.getters.getAuth) {\r\n        if (mainInter.indexOf(userId) == -1 && oppositeInter.indexOf(userId) == -1) {\r\n          mainInter.push(userId);\r\n          comment[main.replace(/'/g)] = true;\r\n        }\r\n        else if (mainInter.indexOf(userId) == -1 && oppositeInter.indexOf(userId) != -1) {\r\n          mainInter.push(userId);\r\n          oppositeInter.splice(oppositeInter.findIndex(id => id === userId), 1);\r\n          comment[main.replace(/'/g)] = true;\r\n          comment[reverse.replace(/'/g)] = false;\r\n        }\r\n        else if (mainInter.indexOf(userId) != -1 && oppositeInter.indexOf(userId) == -1) {\r\n          mainInter.splice(mainInter.findIndex(id => id === userId), 1)\r\n          comment[main.replace(/'/g)] = false;\r\n        }\r\n      }\r\n      else {\r\n        store.commit('toggleOpenedAuth');\r\n        document.body.style.overflow = \"hidden\";\r\n        document.documentElement.scrollTop = 0;\r\n      }\r\n    };\r\n\r\n    let leaveAComment = function () {\r\n      if(store.getters.getAuth) {\r\n        console.log('inputComment', inputComment.value)\r\n        console.log('starsCount', starsCount.value)\r\n        if(inputComment.value !== '' && starsCount.value !== 0) {\r\n          let userName = store.getters.getUsers\r\n              .filter((el) => el.userId === parseInt(store.getters.getUserId))\r\n              .map(map => map.name).toString();\r\n          comments.value.push({\r\n            user: userName,\r\n            date: formattedToday,\r\n            stars: starsCount.value,\r\n            comment: inputComment.value,\r\n            usersIdLikes: [],\r\n            usersIdDislikes: []\r\n          })\r\n          inputComment.value = ''\r\n        }\r\n        else {\r\n          alert('Пожалуйста, напишите комментарий и оцените тест по 5-и бальной шкале')\r\n        }\r\n      }\r\n      else {\r\n        store.commit('toggleOpenedAuth');\r\n        document.body.style.overflow = \"hidden\";\r\n        document.documentElement.scrollTop = 0;\r\n      }\r\n    }\r\n\r\n    let openInput = (comment) => comment.openedInput = !comment.openedInput;\r\n\r\n    let answerComment = function (comment) {\r\n      if(store.getters.getAuth) {\r\n        if(comment.inputValue.trim() !== '') {\r\n          let userName = store.getters.getUsers.\r\n          filter((el) => el.userId === parseInt(store.getters.getUserId))\r\n              .map(map => map.name).toString();\r\n          comment.answered.push({\r\n            user: userName,\r\n            date: formattedToday,\r\n            comment: comment.inputValue,\r\n            usersIdLikes: [],\r\n            usersIdDislikes: []\r\n          })\r\n          comment.inputValue = '';\r\n          comment.openedInput = false;\r\n        }\r\n        else {\r\n          alert('Пожалуйста, напишите ответ на комментарий')\r\n        }\r\n      }\r\n      else {\r\n        store.commit('toggleOpenedAuth');\r\n        document.body.style.overflow = \"hidden\";\r\n        document.documentElement.scrollTop = 0;\r\n      }\r\n    }\r\n\r\n    let comments = computed(() => store.getters.getComments);\r\n    console.log(comments.value)\r\n\r\n    return {\r\n      comments,\r\n      putLikeDis,\r\n      starSave,\r\n      leaveAComment,\r\n      inputComment,\r\n      answerComment,\r\n      openInput,\r\n      store\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}