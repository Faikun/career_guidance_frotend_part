{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"result\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"result__title\"\n}, \"Результаты\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h3\", {\n  class: \"test__completed\"\n}, \"Поздравляем! Вы успешно сдали тест\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Итоги теста: \", -1 /* HOISTED */);\nconst _hoisted_5 = {\n  class: \"result__auth\"\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"result__statement\"\n}, \"Чтобы увидеть результат, пожалуйста, пройдите регистрацию или войдите в свою учётную запись\", -1 /* HOISTED */);\nconst _hoisted_7 = {\n  class: \"result__auth-links\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_comments = _resolveComponent(\"comments\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _hoisted_3, $setup.store.getters.getAuth ? (_openBlock(), _createElementBlock(\"ul\", {\n    class: \"result__show\",\n    key: $setup.finalRes\n  }, [_hoisted_4, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.finalRes, res => {\n    return _openBlock(), _createElementBlock(\"li\", null, [_createElementVNode(\"span\", null, _toDisplayString(res[0]), 1 /* TEXT */), _createElementVNode(\"span\", null, _toDisplayString(res[1]), 1 /* TEXT */)]);\n  }), 256 /* UNKEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" ./result__show \"), _createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"a\", {\n    href: \"#\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.auth && $setup.auth(...args))\n  }, \"Войти в аккаунт\"), _createElementVNode(\"a\", {\n    href: \"#\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $setup.auth && $setup.auth(...args))\n  }, \"Зарегестрироваться\")])])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)), _createCommentVNode(\" ./result__auth \"), _createVNode(_component_comments)]), _createCommentVNode(\" ./result \")], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","_hoisted_1","_hoisted_2","_hoisted_3","$setup","store","getters","getAuth","_createElementBlock","key","finalRes","_hoisted_4","_Fragment","_renderList","res","_toDisplayString","_createCommentVNode","_hoisted_5","_hoisted_6","_hoisted_7","href","onClick","_cache","args","auth","_createVNode","_component_comments"],"sources":["E:\\Vue\\career_guidance\\src\\views\\Result.vue"],"sourcesContent":["<template>\r\n<div class=\"result\">\r\n  <h1 class=\"result__title\">Результаты</h1>\r\n  <h3 class=\"test__completed\">Поздравляем! Вы успешно сдали тест</h3>\r\n  <ul v-if=\"store.getters.getAuth\" class=\"result__show\" :key=\"finalRes\">\r\n    <span>Итоги теста: </span>\r\n    <li v-for=\"res in finalRes\">\r\n      <span>{{ res[0] }}</span>\r\n      <span>{{ res[1] }}</span>\r\n    </li>\r\n  </ul><!-- ./result__show -->\r\n  <div v-else class=\"result__auth\">\r\n    <div class=\"result__statement\">Чтобы увидеть результат, пожалуйста, пройдите регистрацию или войдите в свою учётную запись</div>\r\n    <div class=\"result__auth-links\">\r\n      <a href=\"#\" @click=\"auth\">Войти в аккаунт</a>\r\n      <a href=\"#\" @click=\"auth\">Зарегестрироваться</a>\r\n    </div>\r\n  </div><!-- ./result__auth -->\r\n  <comments></comments>\r\n</div><!-- ./result -->\r\n</template>\r\n\r\n<script>\r\nimport Comments from \"@/components/Comments.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {computed, onMounted, watch} from \"vue\";\r\n\r\nexport default {\r\n  name: \"Result\",\r\n  components: {Comments},\r\n  setup() {\r\n    let store = useStore();\r\n    let auth = function () {\r\n      store.commit('toggleOpenedAuth');\r\n      document.body.style.overflow = \"hidden\";\r\n    }\r\n    let finalRes;\r\n\r\n    onMounted(() => console.log(finalRes))\r\n\r\n    const isAuth = computed(() => store.getters.getAuth)\r\n\r\n    watch(isAuth, (newValue, oldValue) => {\r\n      if(newValue) {\r\n        const result = JSON.parse(localStorage.getItem('test'));\r\n        finalRes = Object.entries(result);\r\n      }\r\n    })\r\n\r\n    return {\r\n      store,\r\n      auth,\r\n      finalRes\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"mappings":";;EACKA,KAAK,EAAC;AAAQ;gCACjBC,mBAAA,CAAyC;EAArCD,KAAK,EAAC;AAAe,GAAC,YAAU;gCACpCC,mBAAA,CAAmE;EAA/DD,KAAK,EAAC;AAAiB,GAAC,oCAAkC;gCAE5DC,mBAAA,CAA0B,cAApB,eAAa;;EAMTD,KAAK,EAAC;AAAc;gCAC9BC,mBAAA,CAAgI;EAA3HD,KAAK,EAAC;AAAmB,GAAC,6FAA2F;;EACrHA,KAAK,EAAC;AAAoB;;;6DAZnCC,mBAAA,CAkBM,OAlBNC,UAkBM,GAjBJC,UAAyC,EACzCC,UAAmE,EACzDC,MAAA,CAAAC,KAAK,CAACC,OAAO,CAACC,OAAO,I,cAA/BC,mBAAA,CAMK;IAN4BT,KAAK,EAAC,cAAc;IAAEU,GAAG,EAAEL,MAAA,CAAAM;MAC1DC,UAA0B,G,kBAC1BH,mBAAA,CAGKI,SAAA,QAAAC,WAAA,CAHaT,MAAA,CAAAM,QAAQ,EAAfI,GAAG;yBAAdN,mBAAA,CAGK,aAFHR,mBAAA,CAAyB,cAAAe,gBAAA,CAAhBD,GAAG,qBACZd,mBAAA,CAAyB,cAAAe,gBAAA,CAAhBD,GAAG,oB;uDAGhBN,mBAAA,CAMMI,SAAA;IAAAH,GAAA;EAAA,IAPDO,mBAAA,oBAAuB,EAC5BhB,mBAAA,CAMM,OANNiB,UAMM,GALJC,UAAgI,EAChIlB,mBAAA,CAGM,OAHNmB,UAGM,GAFJnB,mBAAA,CAA6C;IAA1CoB,IAAI,EAAC,GAAG;IAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEnB,MAAA,CAAAoB,IAAA,IAAApB,MAAA,CAAAoB,IAAA,IAAAD,IAAA,CAAI;KAAE,iBAAe,GACzCvB,mBAAA,CAAgD;IAA7CoB,IAAI,EAAC,GAAG;IAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEnB,MAAA,CAAAoB,IAAA,IAAApB,MAAA,CAAAoB,IAAA,IAAAD,IAAA,CAAI;KAAE,oBAAkB,E,uDAE1CP,mBAAA,oBAAuB,EAC7BS,YAAA,CAAqBC,mBAAA,E,GACjBV,mBAAA,cAAiB,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}